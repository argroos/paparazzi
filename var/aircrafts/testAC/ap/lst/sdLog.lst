ARM GAS  /tmp/ccqOyY7m.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"sdLog.c"
  13              		.text
  14              		.section	.rodata.thdSdLog.str1.4,"aMS",%progbits,1
  15              		.align	2
  16              	.LC0:
  17 0000 74686453 		.ascii	"thdSdLog\000"
  17      644C6F67 
  17      00
  18 0009 000000   		.align	2
  19              	.LC1:
  20 000c 0D0A454E 		.ascii	"\015\012END_OF_LOG\015\012\000"
  20      445F4F46 
  20      5F4C4F47 
  20      0D0A00
  21              		.section	.text.thdSdLog,"ax",%progbits
  22              		.align	1
  23              		.p2align 4,,15
  24              		.arch armv7e-m
  25              		.syntax unified
  26              		.thumb
  27              		.thumb_func
  28              		.fpu fpv4-sp-d16
  29              		.type	thdSdLog, %function
  30              	thdSdLog:
  31              		@ args = 0, pretend = 0, frame = 24
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  34 0004 844B     		ldr	r3, .L41
  35 0006 8548     		ldr	r0, .L41+4
  36 0008 DB68     		ldr	r3, [r3, #12]
  37 000a 854A     		ldr	r2, .L41+8
  38 000c DFF81CA2 		ldr	r10, .L41+20
  39 0010 DFF81CB2 		ldr	fp, .L41+24
  40 0014 DFF81C82 		ldr	r8, .L41+28
  41 0018 DFF81C92 		ldr	r9, .L41+32
  42 001c DA61     		str	r2, [r3, #28]
  43 001e 0021     		movs	r1, #0
  44 0020 87B0     		sub	sp, sp, #28
  45 0022 0170     		strb	r1, [r0]
  46              	.L14:
  47 0024 0024     		movs	r4, #0
  48 0026 05A9     		add	r1, sp, #20
  49 0028 4046     		mov	r0, r8
  50 002a 0594     		str	r4, [sp, #20]
  51 002c FFF7FEFF 		bl	msgqueue_pop
  52 0030 0028     		cmp	r0, #0
ARM GAS  /tmp/ccqOyY7m.s 			page 2


  53 0032 40DD     		ble	.L2
  54 0034 059B     		ldr	r3, [sp, #20]
  55 0036 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
  56 0038 8D08     		lsrs	r5, r1, #2
  57 003a 01F00301 		and	r1, r1, #3
  58 003e 05EBC526 		add	r6, r5, r5, lsl #11
  59 0042 4FF41C77 		mov	r7, #624
  60 0046 0329     		cmp	r1, #3
  61 0048 07FB05A5 		mla	r5, r7, r5, r10
  62 004c 0BEB8606 		add	r6, fp, r6, lsl #2
  63 0050 0ED1     		bne	.L35
  64 0052 1946     		mov	r1, r3
  65 0054 4846     		mov	r0, r9
  66 0056 FFF7FEFF 		bl	tlsf_free_r
  67 005a 704B     		ldr	r3, .L41+4
  68 005c 0820     		movs	r0, #8
  69 005e 1870     		strb	r0, [r3]
  70 0060 FFF7FEFF 		bl	chThdExit
  71 0064 059B     		ldr	r3, [sp, #20]
  72              	.L5:
  73 0066 1946     		mov	r1, r3
  74 0068 4846     		mov	r0, r9
  75 006a FFF7FEFF 		bl	tlsf_free_r
  76 006e D9E7     		b	.L14
  77              	.L35:
  78 0070 95F86022 		ldrb	r2, [r5, #608]	@ zero_extendqisi2
  79 0074 29BB     		cbnz	r1, .L36
  80 0076 002A     		cmp	r2, #0
  81 0078 F5D0     		beq	.L5
  82 007a 06F50052 		add	r2, r6, #8192
  83 007e 441E     		subs	r4, r0, #1
  84 0080 1288     		ldrh	r2, [r2]
  85 0082 0192     		str	r2, [sp, #4]
  86 0084 C2F50051 		rsb	r1, r2, #8192
  87 0088 A142     		cmp	r1, r4
  88 008a 0091     		str	r1, [sp]
  89 008c 3CDD     		ble	.L9
  90 008e 3244     		add	r2, r2, r6
  91 0090 591C     		adds	r1, r3, #1
  92 0092 1046     		mov	r0, r2
  93 0094 2246     		mov	r2, r4
  94 0096 0093     		str	r3, [sp]
  95 0098 FFF7FEFF 		bl	memcpy
  96 009c 009B     		ldr	r3, [sp]
  97 009e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  98 00a0 9208     		lsrs	r2, r2, #2
  99 00a2 02EBC222 		add	r2, r2, r2, lsl #11
 100 00a6 0BEB8202 		add	r2, fp, r2, lsl #2
 101 00aa 02F50052 		add	r2, r2, #8192
 102 00ae 1188     		ldrh	r1, [r2]
 103 00b0 0C44     		add	r4, r4, r1
 104 00b2 1480     		strh	r4, [r2]	@ movhi
 105 00b4 D7E7     		b	.L5
 106              	.L2:
 107 00b6 594B     		ldr	r3, .L41+4
 108 00b8 0920     		movs	r0, #9
 109 00ba 1870     		strb	r0, [r3]
ARM GAS  /tmp/ccqOyY7m.s 			page 3


 110 00bc FFF7FEFF 		bl	chThdExit
 111 00c0 B0E7     		b	.L14
 112              	.L36:
 113 00c2 002A     		cmp	r2, #0
 114 00c4 CFD0     		beq	.L5
 115 00c6 06F50052 		add	r2, r6, #8192
 116 00ca 1288     		ldrh	r2, [r2]
 117 00cc 002A     		cmp	r2, #0
 118 00ce 60D1     		bne	.L37
 119 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 120 00d2 03F00302 		and	r2, r3, #3
 121 00d6 012A     		cmp	r2, #1
 122 00d8 74D0     		beq	.L38
 123              	.L7:
 124 00da 9B08     		lsrs	r3, r3, #2
 125 00dc 4FF41C72 		mov	r2, #624
 126 00e0 02FB03A3 		mla	r3, r2, r3, r10
 127 00e4 93F86132 		ldrb	r3, [r3, #609]	@ zero_extendqisi2
 128 00e8 002B     		cmp	r3, #0
 129 00ea 70D1     		bne	.L39
 130              	.L8:
 131 00ec 2846     		mov	r0, r5
 132 00ee FFF7FEFF 		bl	f_close
 133 00f2 059B     		ldr	r3, [sp, #20]
 134 00f4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 135 00f6 4FF41C71 		mov	r1, #624
 136 00fa 9208     		lsrs	r2, r2, #2
 137 00fc 01FB02A2 		mla	r2, r1, r2, r10
 138 0100 0021     		movs	r1, #0
 139 0102 82F86012 		strb	r1, [r2, #608]
 140 0106 AEE7     		b	.L5
 141              	.L9:
 142 0108 591C     		adds	r1, r3, #1
 143 010a DDE90023 		ldrd	r2, r3, [sp]
 144 010e F018     		adds	r0, r6, r3
 145 0110 FFF7FEFF 		bl	memcpy
 146 0114 04AB     		add	r3, sp, #16
 147 0116 4FF40052 		mov	r2, #8192
 148 011a 3146     		mov	r1, r6
 149 011c 2846     		mov	r0, r5
 150 011e FFF7FEFF 		bl	f_write
 151 0122 404A     		ldr	r2, .L41+12
 152 0124 059B     		ldr	r3, [sp, #20]
 153 0126 0290     		str	r0, [sp, #8]
 154 0128 1068     		ldr	r0, [r2]
 155 012a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 156 012c 0499     		ldr	r1, [sp, #16]
 157 012e 9208     		lsrs	r2, r2, #2
 158 0130 0844     		add	r0, r0, r1
 159 0132 07FB02A2 		mla	r2, r7, r2, r10
 160 0136 3B49     		ldr	r1, .L41+12
 161 0138 0860     		str	r0, [r1]
 162 013a D2F85802 		ldr	r0, [r2, #600]
 163 013e 58B1     		cbz	r0, .L10
 164 0140 D2F85CC2 		ldr	ip, [r2, #604]
 165 0144 344A     		ldr	r2, .L41
 166 0146 D269     		ldr	r2, [r2, #28]
ARM GAS  /tmp/ccqOyY7m.s 			page 4


 167 0148 42F2107E 		movw	lr, #10000
 168 014c A2EB0C0C 		sub	ip, r2, ip
 169 0150 0EFB00F0 		mul	r0, lr, r0
 170 0154 8445     		cmp	ip, r0
 171 0156 51D8     		bhi	.L40
 172              	.L10:
 173 0158 029A     		ldr	r2, [sp, #8]
 174 015a 002A     		cmp	r2, #0
 175 015c 43D0     		beq	.L11
 176 015e 2F49     		ldr	r1, .L41+4
 177 0160 0222     		movs	r2, #2
 178 0162 0A70     		strb	r2, [r1]
 179              	.L12:
 180 0164 009A     		ldr	r2, [sp]
 181 0166 0093     		str	r3, [sp]
 182 0168 A41A     		subs	r4, r4, r2
 183 016a 019A     		ldr	r2, [sp, #4]
 184 016c C2F50051 		rsb	r1, r2, #8192
 185 0170 0131     		adds	r1, r1, #1
 186 0172 1944     		add	r1, r1, r3
 187 0174 3046     		mov	r0, r6
 188 0176 2246     		mov	r2, r4
 189 0178 FFF7FEFF 		bl	memcpy
 190 017c 009B     		ldr	r3, [sp]
 191 017e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 192 0180 8908     		lsrs	r1, r1, #2
 193 0182 01EBC121 		add	r1, r1, r1, lsl #11
 194 0186 0BEB8101 		add	r1, fp, r1, lsl #2
 195 018a 01F50051 		add	r1, r1, #8192
 196 018e 0C80     		strh	r4, [r1]	@ movhi
 197 0190 69E7     		b	.L5
 198              	.L37:
 199 0192 3146     		mov	r1, r6
 200 0194 04AB     		add	r3, sp, #16
 201 0196 2846     		mov	r0, r5
 202 0198 FFF7FEFF 		bl	f_write
 203 019c 059B     		ldr	r3, [sp, #20]
 204 019e 2148     		ldr	r0, .L41+12
 205 01a0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 206 01a2 0168     		ldr	r1, [r0]
 207 01a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 208 01a6 9208     		lsrs	r2, r2, #2
 209 01a8 02EBC222 		add	r2, r2, r2, lsl #11
 210 01ac 0BEB8202 		add	r2, fp, r2, lsl #2
 211 01b0 02F50052 		add	r2, r2, #8192
 212 01b4 1480     		strh	r4, [r2]	@ movhi
 213 01b6 049A     		ldr	r2, [sp, #16]
 214 01b8 0A44     		add	r2, r2, r1
 215 01ba 0260     		str	r2, [r0]
 216 01bc 03F00302 		and	r2, r3, #3
 217 01c0 012A     		cmp	r2, #1
 218 01c2 8AD1     		bne	.L7
 219              	.L38:
 220 01c4 2846     		mov	r0, r5
 221 01c6 FFF7FEFF 		bl	f_sync
 222 01ca 059B     		ldr	r3, [sp, #20]
 223 01cc 4BE7     		b	.L5
ARM GAS  /tmp/ccqOyY7m.s 			page 5


 224              	.L39:
 225 01ce 1649     		ldr	r1, .L41+16
 226 01d0 04AB     		add	r3, sp, #16
 227 01d2 0E22     		movs	r2, #14
 228 01d4 2846     		mov	r0, r5
 229 01d6 FFF7FEFF 		bl	f_write
 230 01da 1249     		ldr	r1, .L41+12
 231 01dc 049A     		ldr	r2, [sp, #16]
 232 01de 0B68     		ldr	r3, [r1]
 233 01e0 1344     		add	r3, r3, r2
 234 01e2 0B60     		str	r3, [r1]
 235 01e4 82E7     		b	.L8
 236              	.L11:
 237 01e6 049A     		ldr	r2, [sp, #16]
 238 01e8 B2F5005F 		cmp	r2, #8192
 239 01ec BAD0     		beq	.L12
 240 01ee 0B4B     		ldr	r3, .L41+4
 241 01f0 0420     		movs	r0, #4
 242 01f2 1870     		strb	r0, [r3]
 243 01f4 FFF7FEFF 		bl	chThdExit
 244 01f8 059B     		ldr	r3, [sp, #20]
 245 01fa B3E7     		b	.L12
 246              	.L40:
 247 01fc 2846     		mov	r0, r5
 248 01fe 0392     		str	r2, [sp, #12]
 249 0200 FFF7FEFF 		bl	f_sync
 250 0204 059B     		ldr	r3, [sp, #20]
 251 0206 039A     		ldr	r2, [sp, #12]
 252 0208 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 253 020a 8008     		lsrs	r0, r0, #2
 254 020c 07FB00A7 		mla	r7, r7, r0, r10
 255 0210 C7F85C22 		str	r2, [r7, #604]
 256 0214 A0E7     		b	.L10
 257              	.L42:
 258 0216 00BF     		.align	2
 259              	.L41:
 260 0218 00000000 		.word	ch0
 261 021c 00000000 		.word	.LANCHOR0
 262 0220 00000000 		.word	.LC0
 263 0224 00000000 		.word	.LANCHOR3
 264 0228 0C000000 		.word	.LC1
 265 022c 00000000 		.word	.LANCHOR2
 266 0230 00000000 		.word	perfBuffers.0
 267 0234 00000000 		.word	.LANCHOR1
 268 0238 00000000 		.word	ccmHeap
 269              		.size	thdSdLog, .-thdSdLog
 270              		.section	.text.cleanQueue.part.0,"ax",%progbits
 271              		.align	1
 272              		.p2align 4,,15
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 277              		.type	cleanQueue.part.0, %function
 278              	cleanQueue.part.0:
 279              		@ args = 0, pretend = 0, frame = 16
 280              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccqOyY7m.s 			page 6


 281 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 282 0004 164C     		ldr	r4, .L49
 283 0006 174E     		ldr	r6, .L49+4
 284 0008 84B0     		sub	sp, sp, #16
 285 000a 4FF03009 		mov	r9, #48
 286 000e 08E0     		b	.L47
 287              	.L44:
 288 0010 0193     		str	r3, [sp, #4]
 289 0012 FFF7FEFF 		bl	msgqueue_pop_timeout
 290 0016 0028     		cmp	r0, #0
 291 0018 3046     		mov	r0, r6
 292 001a 02DB     		blt	.L47
 293 001c 0199     		ldr	r1, [sp, #4]
 294 001e FFF7FEFF 		bl	tlsf_free_r
 295              	.L47:
 296 0022 02A9     		add	r1, sp, #8
 297 0024 3046     		mov	r0, r6
 298 0026 FFF7FEFF 		bl	tlsf_stat_r
 299 002a 029F     		ldr	r7, [sp, #8]
 300              		.syntax unified
 301              	@ 493 "/home/argroos/paparazzi/sw/ext/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 302 002c 89F31188 		MSR basepri, r9
 303              	@ 0 "" 2
 304              		.thumb
 305              		.syntax unified
 306 0030 FFF7FEFF 		bl	__stats_start_measure_crit_thd
 307 0034 D4E900A5 		ldrd	r10, r5, [r4]
 308 0038 D4F81080 		ldr	r8, [r4, #16]
 309 003c FFF7FEFF 		bl	__stats_stop_measure_crit_thd
 310 0040 0023     		movs	r3, #0
 311              		.syntax unified
 312              	@ 493 "/home/argroos/paparazzi/sw/ext/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 313 0042 83F31188 		MSR basepri, r3
 314              	@ 0 "" 2
 315              		.thumb
 316              		.syntax unified
 317 0046 C72F     		cmp	r7, #199
 318 0048 1A46     		mov	r2, r3
 319 004a 01A9     		add	r1, sp, #4
 320 004c 2046     		mov	r0, r4
 321 004e A5EB0A05 		sub	r5, r5, r10
 322 0052 DDD9     		bls	.L44
 323 0054 B8EBA50F 		cmp	r8, r5, asr #2
 324 0058 DAD0     		beq	.L44
 325 005a 04B0     		add	sp, sp, #16
 326              		@ sp needed
 327 005c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 328              	.L50:
 329              		.align	2
 330              	.L49:
 331 0060 00000000 		.word	.LANCHOR1
 332 0064 00000000 		.word	ccmHeap
 333              		.size	cleanQueue.part.0, .-cleanQueue.part.0
 334              		.section	.rodata.sdLogInit.str1.4,"aMS",%progbits,1
 335              		.align	2
 336              	.LC2:
 337 0000 2F00     		.ascii	"/\000"
ARM GAS  /tmp/ccqOyY7m.s 			page 7


 338              		.section	.text.sdLogInit,"ax",%progbits
 339              		.align	1
 340              		.p2align 4,,15
 341              		.global	sdLogInit
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 345              		.fpu fpv4-sp-d16
 346              		.type	sdLogInit, %function
 347              	sdLogInit:
 348              		@ args = 0, pretend = 0, frame = 8
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 351 0002 334E     		ldr	r6, .L69
 352 0004 334A     		ldr	r2, .L69+4
 353 0006 3468     		ldr	r4, [r6]
 354 0008 0023     		movs	r3, #0
 355 000a 85B0     		sub	sp, sp, #20
 356 000c CDE90233 		strd	r3, r3, [sp, #8]
 357 0010 0546     		mov	r5, r0
 358 0012 1360     		str	r3, [r2]
 359 0014 34B1     		cbz	r4, .L52
 360 0016 304A     		ldr	r2, .L69+8
 361 0018 0360     		str	r3, [r0]
 362 001a 0C24     		movs	r4, #12
 363 001c 1470     		strb	r4, [r2]
 364              	.L53:
 365 001e 2046     		mov	r0, r4
 366 0020 05B0     		add	sp, sp, #20
 367              		@ sp needed
 368 0022 F0BD     		pop	{r4, r5, r6, r7, pc}
 369              	.L52:
 370 0024 2D48     		ldr	r0, .L69+12
 371 0026 2E4A     		ldr	r2, .L69+16
 372 0028 2E49     		ldr	r1, .L69+20
 373 002a 4FF48063 		mov	r3, #1024
 374 002e FFF7FEFF 		bl	msgqueue_init
 375 0032 2046     		mov	r0, r4
 376 0034 FFF7FEFF 		bl	sdc_lld_is_card_inserted
 377 0038 48B1     		cbz	r0, .L55
 378 003a FFF7FEFF 		bl	sdio_connect
 379 003e 6420     		movs	r0, #100
 380 0040 FFF7FEFF 		bl	chThdSleep
 381 0044 FFF7FEFF 		bl	sdio_disconnect
 382 0048 FFF7FEFF 		bl	sdio_connect
 383 004c 28B9     		cbnz	r0, .L67
 384              	.L55:
 385 004e 0124     		movs	r4, #1
 386 0050 214B     		ldr	r3, .L69+8
 387 0052 2046     		mov	r0, r4
 388 0054 1C70     		strb	r4, [r3]
 389 0056 05B0     		add	sp, sp, #20
 390              		@ sp needed
 391 0058 F0BD     		pop	{r4, r5, r6, r7, pc}
 392              	.L67:
 393 005a 234F     		ldr	r7, .L69+24
 394 005c 2349     		ldr	r1, .L69+28
ARM GAS  /tmp/ccqOyY7m.s 			page 8


 395 005e 0122     		movs	r2, #1
 396 0060 07F59C60 		add	r0, r7, #1248
 397 0064 FFF7FEFF 		bl	f_mount
 398 0068 0446     		mov	r4, r0
 399 006a 60BB     		cbnz	r0, .L68
 400 006c 5DB1     		cbz	r5, .L57
 401 006e 03AA     		add	r2, sp, #12
 402 0070 1E48     		ldr	r0, .L69+28
 403 0072 02A9     		add	r1, sp, #8
 404 0074 FFF7FEFF 		bl	f_getfree
 405 0078 B7F8EA34 		ldrh	r3, [r7, #1258]
 406 007c 029A     		ldr	r2, [sp, #8]
 407 007e 02FB03F3 		mul	r3, r2, r3
 408 0082 5B08     		lsrs	r3, r3, #1
 409 0084 2B60     		str	r3, [r5]
 410              	.L57:
 411 0086 0025     		movs	r5, #0
 412 0088 4FF47A70 		mov	r0, #1000
 413 008c A7F86052 		strh	r5, [r7, #608]	@ movhi
 414 0090 C7F86452 		str	r5, [r7, #612]
 415 0094 87F86852 		strb	r5, [r7, #616]
 416 0098 A7F8D054 		strh	r5, [r7, #1232]	@ movhi
 417 009c C7F8D454 		str	r5, [r7, #1236]
 418 00a0 87F8D854 		strb	r5, [r7, #1240]
 419 00a4 FFF7FEFF 		bl	chThdSleep
 420 00a8 114B     		ldr	r3, .L69+32
 421 00aa 1248     		ldr	r0, .L69+36
 422 00ac 0095     		str	r5, [sp]
 423 00ae 8122     		movs	r2, #129
 424 00b0 40F63821 		movw	r1, #2616
 425 00b4 FFF7FEFF 		bl	chThdCreateStatic
 426 00b8 074B     		ldr	r3, .L69+8
 427 00ba 3060     		str	r0, [r6]
 428 00bc A842     		cmp	r0, r5
 429 00be 08BF     		it	eq
 430 00c0 0924     		moveq	r4, #9
 431 00c2 1C70     		strb	r4, [r3]
 432 00c4 ABE7     		b	.L53
 433              	.L68:
 434 00c6 044B     		ldr	r3, .L69+8
 435 00c8 0224     		movs	r4, #2
 436 00ca 1C70     		strb	r4, [r3]
 437 00cc A7E7     		b	.L53
 438              	.L70:
 439 00ce 00BF     		.align	2
 440              	.L69:
 441 00d0 00000000 		.word	.LANCHOR4
 442 00d4 00000000 		.word	.LANCHOR3
 443 00d8 00000000 		.word	.LANCHOR0
 444 00dc 00000000 		.word	.LANCHOR1
 445 00e0 08400000 		.word	queMbBuffer
 446 00e4 00000000 		.word	ccmHeap
 447 00e8 00000000 		.word	.LANCHOR2
 448 00ec 00000000 		.word	.LC2
 449 00f0 00000000 		.word	thdSdLog
 450 00f4 00000000 		.word	.LANCHOR5
 451              		.size	sdLogInit, .-sdLogInit
ARM GAS  /tmp/ccqOyY7m.s 			page 9


 452              		.section	.rodata.sdLogFinish.str1.4,"aMS",%progbits,1
 453              		.align	2
 454              	.LC3:
 455 0000 00       		.ascii	"\000"
 456              		.section	.text.sdLogFinish,"ax",%progbits
 457              		.align	1
 458              		.p2align 4,,15
 459              		.global	sdLogFinish
 460              		.syntax unified
 461              		.thumb
 462              		.thumb_func
 463              		.fpu fpv4-sp-d16
 464              		.type	sdLogFinish, %function
 465              	sdLogFinish:
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468 0000 0022     		movs	r2, #0
 469 0002 08B5     		push	{r3, lr}
 470 0004 0449     		ldr	r1, .L75
 471 0006 1046     		mov	r0, r2
 472 0008 FFF7FEFF 		bl	f_mount
 473 000c 034B     		ldr	r3, .L75+4
 474 000e 0028     		cmp	r0, #0
 475 0010 18BF     		it	ne
 476 0012 0220     		movne	r0, #2
 477 0014 1870     		strb	r0, [r3]
 478 0016 08BD     		pop	{r3, pc}
 479              	.L76:
 480              		.align	2
 481              	.L75:
 482 0018 00000000 		.word	.LC3
 483 001c 00000000 		.word	.LANCHOR0
 484              		.size	sdLogFinish, .-sdLogFinish
 485              		.section	.text.sdLogWriteLog,"ax",%progbits
 486              		.align	1
 487              		.p2align 4,,15
 488              		.global	sdLogWriteLog
 489              		.syntax unified
 490              		.thumb
 491              		.thumb_func
 492              		.fpu fpv4-sp-d16
 493              		.type	sdLogWriteLog, %function
 494              	sdLogWriteLog:
 495              		@ args = 4, pretend = 12, frame = 8
 496              		@ frame_needed = 0, uses_anonymous_args = 1
 497 0000 0EB4     		push	{r1, r2, r3}
 498 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 499 0006 C3B2     		uxtb	r3, r0
 500 0008 012B     		cmp	r3, #1
 501 000a 83B0     		sub	sp, sp, #12
 502 000c 40D8     		bhi	.L85
 503 000e 2D4D     		ldr	r5, .L93
 504 0010 4FF41C73 		mov	r3, #624
 505 0014 03FB0055 		mla	r5, r3, r0, r5
 506 0018 0446     		mov	r4, r0
 507 001a 95F86032 		ldrb	r3, [r5, #608]	@ zero_extendqisi2
 508 001e 002B     		cmp	r3, #0
ARM GAS  /tmp/ccqOyY7m.s 			page 10


 509 0020 36D0     		beq	.L85
 510 0022 D5F86412 		ldr	r1, [r5, #612]
 511 0026 0029     		cmp	r1, #0
 512 0028 3FD1     		bne	.L91
 513              	.L79:
 514 002a 274F     		ldr	r7, .L93+4
 515 002c 2748     		ldr	r0, .L93+8
 516 002e 0AAB     		add	r3, sp, #40
 517 0030 0025     		movs	r5, #0
 518 0032 40F22D11 		movw	r1, #301
 519 0036 3D70     		strb	r5, [r7]
 520 0038 0193     		str	r3, [sp, #4]
 521 003a FFF7FEFF 		bl	tlsf_malloc_r
 522 003e 0646     		mov	r6, r0
 523 0040 60B3     		cbz	r0, .L90
 524 0042 8046     		mov	r8, r0
 525 0044 A400     		lsls	r4, r4, #2
 526 0046 08F8014B 		strb	r4, [r8], #1
 527 004a 019B     		ldr	r3, [sp, #4]
 528 004c 099A     		ldr	r2, [sp, #36]
 529 004e 40F22B11 		movw	r1, #299
 530 0052 4046     		mov	r0, r8
 531 0054 FFF7FEFF 		bl	chvsnprintf
 532 0058 4FF49671 		mov	r1, #300
 533 005c 86F82C51 		strb	r5, [r6, #300]
 534 0060 4046     		mov	r0, r8
 535 0062 FFF7FEFF 		bl	strnlen
 536 0066 441C     		adds	r4, r0, #1
 537 0068 3146     		mov	r1, r6
 538 006a 1848     		ldr	r0, .L93+8
 539 006c 2246     		mov	r2, r4
 540 006e FFF7FEFF 		bl	tlsf_realloc_r
 541 0072 0146     		mov	r1, r0
 542 0074 90B1     		cbz	r0, .L90
 543 0076 1648     		ldr	r0, .L93+12
 544 0078 2B46     		mov	r3, r5
 545 007a A2B2     		uxth	r2, r4
 546 007c FFF7FEFF 		bl	msgqueue_send
 547 0080 0028     		cmp	r0, #0
 548 0082 0FDB     		blt	.L83
 549 0084 2846     		mov	r0, r5
 550 0086 03B0     		add	sp, sp, #12
 551              		@ sp needed
 552 0088 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 553 008c 03B0     		add	sp, sp, #12
 554 008e 7047     		bx	lr
 555              	.L85:
 556 0090 0220     		movs	r0, #2
 557              	.L78:
 558 0092 03B0     		add	sp, sp, #12
 559              		@ sp needed
 560 0094 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 561 0098 03B0     		add	sp, sp, #12
 562 009a 7047     		bx	lr
 563              	.L90:
 564 009c 0720     		movs	r0, #7
 565 009e 3870     		strb	r0, [r7]
ARM GAS  /tmp/ccqOyY7m.s 			page 11


 566 00a0 F7E7     		b	.L78
 567              	.L92:
 568 00a2 094F     		ldr	r7, .L93+4
 569              	.L83:
 570 00a4 0620     		movs	r0, #6
 571 00a6 3870     		strb	r0, [r7]
 572 00a8 F3E7     		b	.L78
 573              	.L91:
 574 00aa 95F86822 		ldrb	r2, [r5, #616]	@ zero_extendqisi2
 575 00ae 0848     		ldr	r0, .L93+12
 576 00b0 0023     		movs	r3, #0
 577 00b2 0132     		adds	r2, r2, #1
 578 00b4 FFF7FEFF 		bl	msgqueue_send
 579 00b8 0028     		cmp	r0, #0
 580 00ba F2DB     		blt	.L92
 581 00bc 0023     		movs	r3, #0
 582 00be C5F86432 		str	r3, [r5, #612]
 583 00c2 B2E7     		b	.L79
 584              	.L94:
 585              		.align	2
 586              	.L93:
 587 00c4 00000000 		.word	.LANCHOR2
 588 00c8 00000000 		.word	.LANCHOR0
 589 00cc 00000000 		.word	ccmHeap
 590 00d0 00000000 		.word	.LANCHOR1
 591              		.size	sdLogWriteLog, .-sdLogWriteLog
 592              		.section	.text.sdLogFlushLog,"ax",%progbits
 593              		.align	1
 594              		.p2align 4,,15
 595              		.global	sdLogFlushLog
 596              		.syntax unified
 597              		.thumb
 598              		.thumb_func
 599              		.fpu fpv4-sp-d16
 600              		.type	sdLogFlushLog, %function
 601              	sdLogFlushLog:
 602              		@ args = 0, pretend = 0, frame = 0
 603              		@ frame_needed = 0, uses_anonymous_args = 0
 604 0000 C3B2     		uxtb	r3, r0
 605 0002 012B     		cmp	r3, #1
 606 0004 26D8     		bhi	.L101
 607 0006 70B5     		push	{r4, r5, r6, lr}
 608 0008 1D4D     		ldr	r5, .L113
 609 000a 4FF41C73 		mov	r3, #624
 610 000e 03FB0055 		mla	r5, r3, r0, r5
 611 0012 0446     		mov	r4, r0
 612 0014 95F86032 		ldrb	r3, [r5, #608]	@ zero_extendqisi2
 613 0018 D3B1     		cbz	r3, .L102
 614 001a D5F86412 		ldr	r1, [r5, #612]
 615 001e 11BB     		cbnz	r1, .L110
 616              	.L97:
 617 0020 184E     		ldr	r6, .L113+4
 618 0022 0025     		movs	r5, #0
 619 0024 3570     		strb	r5, [r6]
 620 0026 FFF7FEFF 		bl	cleanQueue.part.0
 621 002a 0121     		movs	r1, #1
 622 002c 1648     		ldr	r0, .L113+8
ARM GAS  /tmp/ccqOyY7m.s 			page 12


 623 002e FFF7FEFF 		bl	tlsf_malloc_r
 624 0032 0146     		mov	r1, r0
 625 0034 A0B1     		cbz	r0, .L111
 626 0036 A400     		lsls	r4, r4, #2
 627 0038 44F00104 		orr	r4, r4, #1
 628 003c 0470     		strb	r4, [r0]
 629 003e 2B46     		mov	r3, r5
 630 0040 1248     		ldr	r0, .L113+12
 631 0042 0122     		movs	r2, #1
 632 0044 FFF7FEFF 		bl	msgqueue_send
 633 0048 0028     		cmp	r0, #0
 634 004a 06DB     		blt	.L100
 635 004c 2846     		mov	r0, r5
 636 004e 70BD     		pop	{r4, r5, r6, pc}
 637              	.L102:
 638 0050 0220     		movs	r0, #2
 639 0052 70BD     		pop	{r4, r5, r6, pc}
 640              	.L101:
 641 0054 0220     		movs	r0, #2
 642 0056 7047     		bx	lr
 643              	.L112:
 644 0058 0A4E     		ldr	r6, .L113+4
 645              	.L100:
 646 005a 0620     		movs	r0, #6
 647 005c 3070     		strb	r0, [r6]
 648 005e 70BD     		pop	{r4, r5, r6, pc}
 649              	.L111:
 650 0060 0720     		movs	r0, #7
 651 0062 3070     		strb	r0, [r6]
 652 0064 70BD     		pop	{r4, r5, r6, pc}
 653              	.L110:
 654 0066 95F86822 		ldrb	r2, [r5, #616]	@ zero_extendqisi2
 655 006a 0848     		ldr	r0, .L113+12
 656 006c 0023     		movs	r3, #0
 657 006e 0132     		adds	r2, r2, #1
 658 0070 FFF7FEFF 		bl	msgqueue_send
 659 0074 0028     		cmp	r0, #0
 660 0076 EFDB     		blt	.L112
 661 0078 0023     		movs	r3, #0
 662 007a C5F86432 		str	r3, [r5, #612]
 663 007e CFE7     		b	.L97
 664              	.L114:
 665              		.align	2
 666              	.L113:
 667 0080 00000000 		.word	.LANCHOR2
 668 0084 00000000 		.word	.LANCHOR0
 669 0088 00000000 		.word	ccmHeap
 670 008c 00000000 		.word	.LANCHOR1
 671              		.size	sdLogFlushLog, .-sdLogFlushLog
 672              		.section	.text.sdLogFlushAllLogs,"ax",%progbits
 673              		.align	1
 674              		.p2align 4,,15
 675              		.global	sdLogFlushAllLogs
 676              		.syntax unified
 677              		.thumb
 678              		.thumb_func
 679              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccqOyY7m.s 			page 13


 680              		.type	sdLogFlushAllLogs, %function
 681              	sdLogFlushAllLogs:
 682              		@ args = 0, pretend = 0, frame = 0
 683              		@ frame_needed = 0, uses_anonymous_args = 0
 684 0000 104B     		ldr	r3, .L127
 685 0002 1B68     		ldr	r3, [r3]
 686 0004 CBB1     		cbz	r3, .L116
 687 0006 10B5     		push	{r4, lr}
 688 0008 0F4C     		ldr	r4, .L127+4
 689 000a 94F86032 		ldrb	r3, [r4, #608]	@ zero_extendqisi2
 690 000e 2BB9     		cbnz	r3, .L117
 691 0010 94F8D004 		ldrb	r0, [r4, #1232]	@ zero_extendqisi2
 692 0014 58B9     		cbnz	r0, .L118
 693              	.L119:
 694 0016 0D4B     		ldr	r3, .L127+8
 695 0018 1870     		strb	r0, [r3]
 696 001a 10BD     		pop	{r4, pc}
 697              	.L117:
 698 001c 0020     		movs	r0, #0
 699 001e FFF7FEFF 		bl	sdLogFlushLog
 700 0022 0028     		cmp	r0, #0
 701 0024 F7D1     		bne	.L119
 702 0026 94F8D004 		ldrb	r0, [r4, #1232]	@ zero_extendqisi2
 703 002a 0028     		cmp	r0, #0
 704 002c F3D0     		beq	.L119
 705              	.L118:
 706 002e 0120     		movs	r0, #1
 707 0030 FFF7FEFF 		bl	sdLogFlushLog
 708 0034 054B     		ldr	r3, .L127+8
 709 0036 1870     		strb	r0, [r3]
 710 0038 10BD     		pop	{r4, pc}
 711              	.L116:
 712 003a 044B     		ldr	r3, .L127+8
 713 003c 0820     		movs	r0, #8
 714 003e 1870     		strb	r0, [r3]
 715 0040 7047     		bx	lr
 716              	.L128:
 717 0042 00BF     		.align	2
 718              	.L127:
 719 0044 00000000 		.word	.LANCHOR4
 720 0048 00000000 		.word	.LANCHOR2
 721 004c 00000000 		.word	.LANCHOR0
 722              		.size	sdLogFlushAllLogs, .-sdLogFlushAllLogs
 723              		.section	.text.sdLogCloseLog,"ax",%progbits
 724              		.align	1
 725              		.p2align 4,,15
 726              		.global	sdLogCloseLog
 727              		.syntax unified
 728              		.thumb
 729              		.thumb_func
 730              		.fpu fpv4-sp-d16
 731              		.type	sdLogCloseLog, %function
 732              	sdLogCloseLog:
 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 0, uses_anonymous_args = 0
 735 0000 C3B2     		uxtb	r3, r0
 736 0002 012B     		cmp	r3, #1
ARM GAS  /tmp/ccqOyY7m.s 			page 14


 737 0004 23D8     		bhi	.L133
 738 0006 154B     		ldr	r3, .L140
 739 0008 4FF41C72 		mov	r2, #624
 740 000c 02FB0033 		mla	r3, r2, r0, r3
 741 0010 10B5     		push	{r4, lr}
 742 0012 93F86032 		ldrb	r3, [r3, #608]	@ zero_extendqisi2
 743 0016 0446     		mov	r4, r0
 744 0018 BBB1     		cbz	r3, .L134
 745 001a FFF7FEFF 		bl	cleanQueue.part.0
 746 001e 0121     		movs	r1, #1
 747 0020 0F48     		ldr	r0, .L140+4
 748 0022 FFF7FEFF 		bl	tlsf_malloc_r
 749 0026 0146     		mov	r1, r0
 750 0028 98B1     		cbz	r0, .L139
 751 002a A400     		lsls	r4, r4, #2
 752 002c 44F00204 		orr	r4, r4, #2
 753 0030 0C70     		strb	r4, [r1]
 754 0032 0023     		movs	r3, #0
 755 0034 0122     		movs	r2, #1
 756 0036 0B48     		ldr	r0, .L140+8
 757 0038 FFF7FEFF 		bl	msgqueue_send
 758 003c 0A4B     		ldr	r3, .L140+12
 759 003e 0028     		cmp	r0, #0
 760 0040 B4BF     		ite	lt
 761 0042 0620     		movlt	r0, #6
 762 0044 0020     		movge	r0, #0
 763 0046 1870     		strb	r0, [r3]
 764 0048 10BD     		pop	{r4, pc}
 765              	.L134:
 766 004a 0220     		movs	r0, #2
 767 004c 10BD     		pop	{r4, pc}
 768              	.L133:
 769 004e 0220     		movs	r0, #2
 770 0050 7047     		bx	lr
 771              	.L139:
 772 0052 054B     		ldr	r3, .L140+12
 773 0054 0720     		movs	r0, #7
 774 0056 1870     		strb	r0, [r3]
 775 0058 10BD     		pop	{r4, pc}
 776              	.L141:
 777 005a 00BF     		.align	2
 778              	.L140:
 779 005c 00000000 		.word	.LANCHOR2
 780 0060 00000000 		.word	ccmHeap
 781 0064 00000000 		.word	.LANCHOR1
 782 0068 00000000 		.word	.LANCHOR0
 783              		.size	sdLogCloseLog, .-sdLogCloseLog
 784              		.section	.text.sdLogCloseAllLogs,"ax",%progbits
 785              		.align	1
 786              		.p2align 4,,15
 787              		.global	sdLogCloseAllLogs
 788              		.syntax unified
 789              		.thumb
 790              		.thumb_func
 791              		.fpu fpv4-sp-d16
 792              		.type	sdLogCloseAllLogs, %function
 793              	sdLogCloseAllLogs:
ARM GAS  /tmp/ccqOyY7m.s 			page 15


 794              		@ args = 0, pretend = 0, frame = 8
 795              		@ frame_needed = 0, uses_anonymous_args = 0
 796 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 797 0004 83B0     		sub	sp, sp, #12
 798 0006 0028     		cmp	r0, #0
 799 0008 41D0     		beq	.L183
 800 000a 5F4F     		ldr	r7, .L192
 801 000c 3B68     		ldr	r3, [r7]
 802 000e 002B     		cmp	r3, #0
 803 0010 00F0A380 		beq	.L184
 804 0014 5D4D     		ldr	r5, .L192+4
 805 0016 5E4E     		ldr	r6, .L192+8
 806 0018 95F86032 		ldrb	r3, [r5, #608]	@ zero_extendqisi2
 807 001c DFF878A1 		ldr	r10, .L192+16
 808 0020 0024     		movs	r4, #0
 809 0022 A146     		mov	r9, r4
 810 0024 4FF0060B 		mov	fp, #6
 811 0028 4FFA84F8 		sxtb	r8, r4
 812 002c 2BBB     		cbnz	r3, .L185
 813              	.L156:
 814 002e 05F51C75 		add	r5, r5, #624
 815 0032 DCB1     		cbz	r4, .L164
 816 0034 2146     		mov	r1, r4
 817 0036 5748     		ldr	r0, .L192+12
 818 0038 FFF7FEFF 		bl	tlsf_malloc_r
 819 003c 0146     		mov	r1, r0
 820 003e 0028     		cmp	r0, #0
 821 0040 74D0     		beq	.L186
 822 0042 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 823 0044 43F00303 		orr	r3, r3, #3
 824 0048 0370     		strb	r3, [r0]
 825 004a 2246     		mov	r2, r4
 826 004c 5248     		ldr	r0, .L192+16
 827 004e 0023     		movs	r3, #0
 828 0050 FFF7FEFF 		bl	msgqueue_send
 829 0054 0028     		cmp	r0, #0
 830 0056 6EDB     		blt	.L187
 831 0058 3868     		ldr	r0, [r7]
 832 005a FFF7FEFF 		bl	chThdWait
 833 005e 0023     		movs	r3, #0
 834 0060 3B60     		str	r3, [r7]
 835              	.L154:
 836 0062 0020     		movs	r0, #0
 837 0064 3070     		strb	r0, [r6]
 838              	.L153:
 839 0066 03B0     		add	sp, sp, #12
 840              		@ sp needed
 841 0068 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 842              	.L164:
 843 006c 95F86032 		ldrb	r3, [r5, #608]	@ zero_extendqisi2
 844 0070 0124     		movs	r4, #1
 845 0072 4FFA84F8 		sxtb	r8, r4
 846 0076 002B     		cmp	r3, #0
 847 0078 D9D0     		beq	.L156
 848              	.L185:
 849 007a D5F86412 		ldr	r1, [r5, #612]
 850 007e 0029     		cmp	r1, #0
ARM GAS  /tmp/ccqOyY7m.s 			page 16


 851 0080 72D1     		bne	.L188
 852              	.L157:
 853 0082 86F80090 		strb	r9, [r6]
 854              	.L159:
 855 0086 4046     		mov	r0, r8
 856 0088 FFF7FEFF 		bl	sdLogCloseLog
 857 008c CFE7     		b	.L156
 858              	.L183:
 859 008e 424E     		ldr	r6, .L192+16
 860 0090 404D     		ldr	r5, .L192+12
 861 0092 0190     		str	r0, [sp, #4]
 862 0094 4FF48064 		mov	r4, #1024
 863              	.L145:
 864 0098 0022     		movs	r2, #0
 865 009a 01A9     		add	r1, sp, #4
 866 009c 3046     		mov	r0, r6
 867 009e FFF7FEFF 		bl	msgqueue_pop_timeout
 868 00a2 0346     		mov	r3, r0
 869 00a4 002B     		cmp	r3, #0
 870 00a6 2846     		mov	r0, r5
 871 00a8 04DB     		blt	.L144
 872 00aa 0199     		ldr	r1, [sp, #4]
 873 00ac FFF7FEFF 		bl	tlsf_free_r
 874 00b0 013C     		subs	r4, r4, #1
 875 00b2 F1D1     		bne	.L145
 876              	.L144:
 877 00b4 344F     		ldr	r7, .L192
 878 00b6 364E     		ldr	r6, .L192+8
 879 00b8 3B68     		ldr	r3, [r7]
 880 00ba 0024     		movs	r4, #0
 881 00bc 3470     		strb	r4, [r6]
 882 00be 002B     		cmp	r3, #0
 883 00c0 4FD0     		beq	.L189
 884 00c2 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 885 00c6 3448     		ldr	r0, .L192+16
 886 00c8 43F00303 		orr	r3, r3, #3
 887 00cc 8DF80430 		strb	r3, [sp, #4]
 888 00d0 0123     		movs	r3, #1
 889 00d2 1A46     		mov	r2, r3
 890 00d4 01A9     		add	r1, sp, #4
 891 00d6 FFF7FEFF 		bl	msgqueue_copy_send
 892 00da 0028     		cmp	r0, #0
 893 00dc ACBF     		ite	ge
 894 00de 0025     		movge	r5, #0
 895 00e0 0625     		movlt	r5, #6
 896 00e2 3868     		ldr	r0, [r7]
 897 00e4 FFF7FEFF 		bl	chThdWait
 898 00e8 3C60     		str	r4, [r7]
 899 00ea 3570     		strb	r5, [r6]
 900              	.L147:
 901 00ec 274C     		ldr	r4, .L192+4
 902 00ee DFF8ACA0 		ldr	r10, .L192+20
 903 00f2 DFF8AC90 		ldr	r9, .L192+24
 904 00f6 0025     		movs	r5, #0
 905 00f8 04F59C67 		add	r7, r4, #1248
 906 00fc A846     		mov	r8, r5
 907              	.L151:
ARM GAS  /tmp/ccqOyY7m.s 			page 17


 908 00fe 94F86032 		ldrb	r3, [r4, #608]	@ zero_extendqisi2
 909 0102 53B1     		cbz	r3, .L149
 910 0104 94F86132 		ldrb	r3, [r4, #609]	@ zero_extendqisi2
 911 0108 D3B9     		cbnz	r3, .L190
 912              	.L150:
 913 010a 2046     		mov	r0, r4
 914 010c FFF7FEFF 		bl	f_close
 915 0110 84F86082 		strb	r8, [r4, #608]
 916 0114 002D     		cmp	r5, #0
 917 0116 08BF     		it	eq
 918 0118 0546     		moveq	r5, r0
 919              	.L149:
 920 011a 04F51C74 		add	r4, r4, #624
 921 011e A742     		cmp	r7, r4
 922 0120 EDD1     		bne	.L151
 923 0122 002D     		cmp	r5, #0
 924 0124 9DD0     		beq	.L154
 925 0126 0220     		movs	r0, #2
 926 0128 3070     		strb	r0, [r6]
 927 012a 9CE7     		b	.L153
 928              	.L186:
 929 012c 0720     		movs	r0, #7
 930 012e 3070     		strb	r0, [r6]
 931 0130 03B0     		add	sp, sp, #12
 932              		@ sp needed
 933 0132 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 934              	.L187:
 935 0136 0620     		movs	r0, #6
 936 0138 3070     		strb	r0, [r6]
 937 013a 03B0     		add	sp, sp, #12
 938              		@ sp needed
 939 013c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 940              	.L190:
 941 0140 01AB     		add	r3, sp, #4
 942 0142 0E22     		movs	r2, #14
 943 0144 5146     		mov	r1, r10
 944 0146 2046     		mov	r0, r4
 945 0148 FFF7FEFF 		bl	f_write
 946 014c D9F80030 		ldr	r3, [r9]
 947 0150 019A     		ldr	r2, [sp, #4]
 948 0152 1344     		add	r3, r3, r2
 949 0154 C9F80030 		str	r3, [r9]
 950 0158 D7E7     		b	.L150
 951              	.L184:
 952 015a 0D4B     		ldr	r3, .L192+8
 953 015c 0820     		movs	r0, #8
 954 015e 1870     		strb	r0, [r3]
 955 0160 81E7     		b	.L153
 956              	.L189:
 957 0162 0823     		movs	r3, #8
 958 0164 3370     		strb	r3, [r6]
 959 0166 C1E7     		b	.L147
 960              	.L188:
 961 0168 95F86822 		ldrb	r2, [r5, #616]	@ zero_extendqisi2
 962 016c 0023     		movs	r3, #0
 963 016e 0132     		adds	r2, r2, #1
 964 0170 5046     		mov	r0, r10
ARM GAS  /tmp/ccqOyY7m.s 			page 18


 965 0172 FFF7FEFF 		bl	msgqueue_send
 966 0176 0028     		cmp	r0, #0
 967 0178 02DB     		blt	.L191
 968 017a C5F86492 		str	r9, [r5, #612]
 969 017e 80E7     		b	.L157
 970              	.L191:
 971 0180 86F800B0 		strb	fp, [r6]
 972 0184 7FE7     		b	.L159
 973              	.L193:
 974 0186 00BF     		.align	2
 975              	.L192:
 976 0188 00000000 		.word	.LANCHOR4
 977 018c 00000000 		.word	.LANCHOR2
 978 0190 00000000 		.word	.LANCHOR0
 979 0194 00000000 		.word	ccmHeap
 980 0198 00000000 		.word	.LANCHOR1
 981 019c 0C000000 		.word	.LC1
 982 01a0 00000000 		.word	.LANCHOR3
 983              		.size	sdLogCloseAllLogs, .-sdLogCloseAllLogs
 984              		.section	.text.sdLogWriteRaw,"ax",%progbits
 985              		.align	1
 986              		.p2align 4,,15
 987              		.global	sdLogWriteRaw
 988              		.syntax unified
 989              		.thumb
 990              		.thumb_func
 991              		.fpu fpv4-sp-d16
 992              		.type	sdLogWriteRaw, %function
 993              	sdLogWriteRaw:
 994              		@ args = 0, pretend = 0, frame = 0
 995              		@ frame_needed = 0, uses_anonymous_args = 0
 996 0000 C3B2     		uxtb	r3, r0
 997 0002 012B     		cmp	r3, #1
 998 0004 32D8     		bhi	.L200
 999 0006 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1000 000a 254D     		ldr	r5, .L212
 1001 000c 4FF41C73 		mov	r3, #624
 1002 0010 03FB0055 		mla	r5, r3, r0, r5
 1003 0014 0446     		mov	r4, r0
 1004 0016 95F86032 		ldrb	r3, [r5, #608]	@ zero_extendqisi2
 1005 001a 23B3     		cbz	r3, .L201
 1006 001c 0F46     		mov	r7, r1
 1007 001e D5F86412 		ldr	r1, [r5, #612]
 1008 0022 1646     		mov	r6, r2
 1009 0024 71BB     		cbnz	r1, .L209
 1010              	.L196:
 1011 0026 DFF88480 		ldr	r8, .L212+12
 1012 002a 1E48     		ldr	r0, .L212+4
 1013 002c 06F1010A 		add	r10, r6, #1
 1014 0030 0025     		movs	r5, #0
 1015 0032 5146     		mov	r1, r10
 1016 0034 88F80050 		strb	r5, [r8]
 1017 0038 FFF7FEFF 		bl	tlsf_malloc_r
 1018 003c 8146     		mov	r9, r0
 1019 003e E8B1     		cbz	r0, .L210
 1020 0040 A400     		lsls	r4, r4, #2
 1021 0042 3246     		mov	r2, r6
ARM GAS  /tmp/ccqOyY7m.s 			page 19


 1022 0044 3946     		mov	r1, r7
 1023 0046 00F8014B 		strb	r4, [r0], #1
 1024 004a FFF7FEFF 		bl	memcpy
 1025 004e 1648     		ldr	r0, .L212+8
 1026 0050 2B46     		mov	r3, r5
 1027 0052 1FFA8AF2 		uxth	r2, r10
 1028 0056 4946     		mov	r1, r9
 1029 0058 FFF7FEFF 		bl	msgqueue_send
 1030 005c 0028     		cmp	r0, #0
 1031 005e 09DB     		blt	.L199
 1032 0060 2846     		mov	r0, r5
 1033 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1034              	.L201:
 1035 0066 0220     		movs	r0, #2
 1036              	.L195:
 1037 0068 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1038              	.L200:
 1039 006c 0220     		movs	r0, #2
 1040 006e 7047     		bx	lr
 1041              	.L211:
 1042 0070 DFF83880 		ldr	r8, .L212+12
 1043              	.L199:
 1044 0074 0620     		movs	r0, #6
 1045 0076 88F80000 		strb	r0, [r8]
 1046 007a F5E7     		b	.L195
 1047              	.L210:
 1048 007c 0720     		movs	r0, #7
 1049 007e 88F80000 		strb	r0, [r8]
 1050 0082 F1E7     		b	.L195
 1051              	.L209:
 1052 0084 95F86822 		ldrb	r2, [r5, #616]	@ zero_extendqisi2
 1053 0088 0748     		ldr	r0, .L212+8
 1054 008a 0132     		adds	r2, r2, #1
 1055 008c 0023     		movs	r3, #0
 1056 008e FFF7FEFF 		bl	msgqueue_send
 1057 0092 0028     		cmp	r0, #0
 1058 0094 ECDB     		blt	.L211
 1059 0096 0023     		movs	r3, #0
 1060 0098 C5F86432 		str	r3, [r5, #612]
 1061 009c C3E7     		b	.L196
 1062              	.L213:
 1063 009e 00BF     		.align	2
 1064              	.L212:
 1065 00a0 00000000 		.word	.LANCHOR2
 1066 00a4 00000000 		.word	ccmHeap
 1067 00a8 00000000 		.word	.LANCHOR1
 1068 00ac 00000000 		.word	.LANCHOR0
 1069              		.size	sdLogWriteRaw, .-sdLogWriteRaw
 1070              		.section	.text.sdLogAllocSDB,"ax",%progbits
 1071              		.align	1
 1072              		.p2align 4,,15
 1073              		.global	sdLogAllocSDB
 1074              		.syntax unified
 1075              		.thumb
 1076              		.thumb_func
 1077              		.fpu fpv4-sp-d16
 1078              		.type	sdLogAllocSDB, %function
ARM GAS  /tmp/ccqOyY7m.s 			page 20


 1079              	sdLogAllocSDB:
 1080              		@ args = 0, pretend = 0, frame = 8
 1081              		@ frame_needed = 0, uses_anonymous_args = 0
 1082 0000 30B5     		push	{r4, r5, lr}
 1083 0002 83B0     		sub	sp, sp, #12
 1084 0004 0446     		mov	r4, r0
 1085 0006 0D46     		mov	r5, r1
 1086 0008 0F48     		ldr	r0, .L221
 1087 000a 0131     		adds	r1, r1, #1
 1088 000c 0191     		str	r1, [sp, #4]
 1089 000e FFF7FEFF 		bl	tlsf_malloc_r
 1090 0012 0199     		ldr	r1, [sp, #4]
 1091 0014 2060     		str	r0, [r4]
 1092 0016 88B1     		cbz	r0, .L219
 1093 0018 0B48     		ldr	r0, .L221
 1094 001a FFF7FEFF 		bl	tlsf_malloc_r
 1095 001e 0346     		mov	r3, r0
 1096 0020 40B1     		cbz	r0, .L220
 1097 0022 2268     		ldr	r2, [r4]
 1098 0024 0949     		ldr	r1, .L221+4
 1099 0026 0020     		movs	r0, #0
 1100 0028 C2E90035 		strd	r3, r5, [r2]
 1101 002c 9060     		str	r0, [r2, #8]
 1102 002e 0870     		strb	r0, [r1]
 1103 0030 03B0     		add	sp, sp, #12
 1104              		@ sp needed
 1105 0032 30BD     		pop	{r4, r5, pc}
 1106              	.L220:
 1107 0034 2168     		ldr	r1, [r4]
 1108 0036 0448     		ldr	r0, .L221
 1109 0038 FFF7FEFF 		bl	tlsf_free_r
 1110              	.L219:
 1111 003c 034B     		ldr	r3, .L221+4
 1112 003e 0720     		movs	r0, #7
 1113 0040 1870     		strb	r0, [r3]
 1114 0042 03B0     		add	sp, sp, #12
 1115              		@ sp needed
 1116 0044 30BD     		pop	{r4, r5, pc}
 1117              	.L222:
 1118 0046 00BF     		.align	2
 1119              	.L221:
 1120 0048 00000000 		.word	ccmHeap
 1121 004c 00000000 		.word	.LANCHOR0
 1122              		.size	sdLogAllocSDB, .-sdLogAllocSDB
 1123              		.section	.text.sdLogGetBufferFromSDB,"ax",%progbits
 1124              		.align	1
 1125              		.p2align 4,,15
 1126              		.global	sdLogGetBufferFromSDB
 1127              		.syntax unified
 1128              		.thumb
 1129              		.thumb_func
 1130              		.fpu fpv4-sp-d16
 1131              		.type	sdLogGetBufferFromSDB, %function
 1132              	sdLogGetBufferFromSDB:
 1133              		@ args = 0, pretend = 0, frame = 0
 1134              		@ frame_needed = 0, uses_anonymous_args = 0
 1135              		@ link register save eliminated.
ARM GAS  /tmp/ccqOyY7m.s 			page 21


 1136 0000 0368     		ldr	r3, [r0]
 1137 0002 8068     		ldr	r0, [r0, #8]
 1138 0004 0133     		adds	r3, r3, #1
 1139 0006 1844     		add	r0, r0, r3
 1140 0008 7047     		bx	lr
 1141              		.size	sdLogGetBufferFromSDB, .-sdLogGetBufferFromSDB
 1142 000a 00BF     		.section	.text.sdLogSeekBufferFromSDB,"ax",%progbits
 1143              		.align	1
 1144              		.p2align 4,,15
 1145              		.global	sdLogSeekBufferFromSDB
 1146              		.syntax unified
 1147              		.thumb
 1148              		.thumb_func
 1149              		.fpu fpv4-sp-d16
 1150              		.type	sdLogSeekBufferFromSDB, %function
 1151              	sdLogSeekBufferFromSDB:
 1152              		@ args = 0, pretend = 0, frame = 0
 1153              		@ frame_needed = 0, uses_anonymous_args = 0
 1154              		@ link register save eliminated.
 1155 0000 D0E90132 		ldrd	r3, r2, [r0, #4]
 1156 0004 1144     		add	r1, r1, r2
 1157 0006 9942     		cmp	r1, r3
 1158 0008 3ABF     		itte	cc
 1159 000a 8160     		strcc	r1, [r0, #8]
 1160 000c 0120     		movcc	r0, #1
 1161 000e 0020     		movcs	r0, #0
 1162 0010 7047     		bx	lr
 1163              		.size	sdLogSeekBufferFromSDB, .-sdLogSeekBufferFromSDB
 1164 0012 00BF     		.section	.text.sdLogGetBufferLenFromSDB,"ax",%progbits
 1165              		.align	1
 1166              		.p2align 4,,15
 1167              		.global	sdLogGetBufferLenFromSDB
 1168              		.syntax unified
 1169              		.thumb
 1170              		.thumb_func
 1171              		.fpu fpv4-sp-d16
 1172              		.type	sdLogGetBufferLenFromSDB, %function
 1173              	sdLogGetBufferLenFromSDB:
 1174              		@ args = 0, pretend = 0, frame = 0
 1175              		@ frame_needed = 0, uses_anonymous_args = 0
 1176              		@ link register save eliminated.
 1177 0000 D0E90120 		ldrd	r2, r0, [r0, #4]
 1178 0004 101A     		subs	r0, r2, r0
 1179 0006 7047     		bx	lr
 1180              		.size	sdLogGetBufferLenFromSDB, .-sdLogGetBufferLenFromSDB
 1181              		.section	.text.sdLogWriteSDB,"ax",%progbits
 1182              		.align	1
 1183              		.p2align 4,,15
 1184              		.global	sdLogWriteSDB
 1185              		.syntax unified
 1186              		.thumb
 1187              		.thumb_func
 1188              		.fpu fpv4-sp-d16
 1189              		.type	sdLogWriteSDB, %function
 1190              	sdLogWriteSDB:
 1191              		@ args = 0, pretend = 0, frame = 0
 1192              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccqOyY7m.s 			page 22


 1193 0000 C3B2     		uxtb	r3, r0
 1194 0002 012B     		cmp	r3, #1
 1195 0004 70B5     		push	{r4, r5, r6, lr}
 1196 0006 0C46     		mov	r4, r1
 1197 0008 08D8     		bhi	.L234
 1198 000a 204E     		ldr	r6, .L243
 1199 000c 4FF41C73 		mov	r3, #624
 1200 0010 03FB0066 		mla	r6, r3, r0, r6
 1201 0014 0546     		mov	r5, r0
 1202 0016 96F86032 		ldrb	r3, [r6, #608]	@ zero_extendqisi2
 1203 001a 63B9     		cbnz	r3, .L240
 1204              	.L234:
 1205 001c 1C4E     		ldr	r6, .L243+4
 1206 001e 0225     		movs	r5, #2
 1207              	.L229:
 1208              	.L232:
 1209 0020 2168     		ldr	r1, [r4]
 1210 0022 1C48     		ldr	r0, .L243+8
 1211 0024 FFF7FEFF 		bl	tlsf_free_r
 1212 0028 1A48     		ldr	r0, .L243+8
 1213 002a 2146     		mov	r1, r4
 1214 002c FFF7FEFF 		bl	tlsf_free_r
 1215 0030 3570     		strb	r5, [r6]
 1216 0032 2846     		mov	r0, r5
 1217 0034 70BD     		pop	{r4, r5, r6, pc}
 1218              	.L240:
 1219 0036 D6F86412 		ldr	r1, [r6, #612]
 1220 003a B1B9     		cbnz	r1, .L241
 1221              	.L230:
 1222 003c D4E90012 		ldrd	r1, r2, [r4]
 1223 0040 AD00     		lsls	r5, r5, #2
 1224 0042 134E     		ldr	r6, .L243+4
 1225 0044 0D70     		strb	r5, [r1]
 1226 0046 0132     		adds	r2, r2, #1
 1227 0048 0023     		movs	r3, #0
 1228 004a 92B2     		uxth	r2, r2
 1229 004c 1248     		ldr	r0, .L243+12
 1230 004e 3370     		strb	r3, [r6]
 1231 0050 FFF7FEFF 		bl	msgqueue_send
 1232 0054 0028     		cmp	r0, #0
 1233 0056 ACBF     		ite	ge
 1234 0058 0025     		movge	r5, #0
 1235 005a 0625     		movlt	r5, #6
 1236 005c 0D48     		ldr	r0, .L243+8
 1237 005e 2146     		mov	r1, r4
 1238 0060 FFF7FEFF 		bl	tlsf_free_r
 1239 0064 3570     		strb	r5, [r6]
 1240 0066 2846     		mov	r0, r5
 1241 0068 70BD     		pop	{r4, r5, r6, pc}
 1242              	.L241:
 1243 006a 96F86822 		ldrb	r2, [r6, #616]	@ zero_extendqisi2
 1244 006e 0A48     		ldr	r0, .L243+12
 1245 0070 0132     		adds	r2, r2, #1
 1246 0072 0023     		movs	r3, #0
 1247 0074 FFF7FEFF 		bl	msgqueue_send
 1248 0078 0028     		cmp	r0, #0
 1249 007a 03DB     		blt	.L242
ARM GAS  /tmp/ccqOyY7m.s 			page 23


 1250 007c 0023     		movs	r3, #0
 1251 007e C6F86432 		str	r3, [r6, #612]
 1252 0082 DBE7     		b	.L230
 1253              	.L242:
 1254 0084 024E     		ldr	r6, .L243+4
 1255 0086 0625     		movs	r5, #6
 1256 0088 3570     		strb	r5, [r6]
 1257 008a C9E7     		b	.L229
 1258              	.L244:
 1259              		.align	2
 1260              	.L243:
 1261 008c 00000000 		.word	.LANCHOR2
 1262 0090 00000000 		.word	.LANCHOR0
 1263 0094 00000000 		.word	ccmHeap
 1264 0098 00000000 		.word	.LANCHOR1
 1265              		.size	sdLogWriteSDB, .-sdLogWriteSDB
 1266              		.section	.text.sdLogWriteByte,"ax",%progbits
 1267              		.align	1
 1268              		.p2align 4,,15
 1269              		.global	sdLogWriteByte
 1270              		.syntax unified
 1271              		.thumb
 1272              		.thumb_func
 1273              		.fpu fpv4-sp-d16
 1274              		.type	sdLogWriteByte, %function
 1275              	sdLogWriteByte:
 1276              		@ args = 0, pretend = 0, frame = 0
 1277              		@ frame_needed = 0, uses_anonymous_args = 0
 1278 0000 C3B2     		uxtb	r3, r0
 1279 0002 012B     		cmp	r3, #1
 1280 0004 1BD8     		bhi	.L251
 1281 0006 70B5     		push	{r4, r5, r6, lr}
 1282 0008 214D     		ldr	r5, .L261
 1283 000a 4FF41C73 		mov	r3, #624
 1284 000e 03FB0055 		mla	r5, r3, r0, r5
 1285 0012 0446     		mov	r4, r0
 1286 0014 95F86032 		ldrb	r3, [r5, #608]	@ zero_extendqisi2
 1287 0018 0BB3     		cbz	r3, .L252
 1288 001a 0E46     		mov	r6, r1
 1289 001c D5F86412 		ldr	r1, [r5, #612]
 1290 0020 79B1     		cbz	r1, .L257
 1291 0022 95F86822 		ldrb	r2, [r5, #616]	@ zero_extendqisi2
 1292 0026 531C     		adds	r3, r2, #1
 1293 0028 DBB2     		uxtb	r3, r3
 1294 002a 0A44     		add	r2, r2, r1
 1295 002c 0F2B     		cmp	r3, #15
 1296 002e 85F86832 		strb	r3, [r5, #616]
 1297 0032 5670     		strb	r6, [r2, #1]
 1298 0034 19D0     		beq	.L258
 1299              	.L249:
 1300 0036 174B     		ldr	r3, .L261+4
 1301 0038 0020     		movs	r0, #0
 1302 003a 1870     		strb	r0, [r3]
 1303 003c 70BD     		pop	{r4, r5, r6, pc}
 1304              	.L251:
 1305 003e 0220     		movs	r0, #2
 1306 0040 7047     		bx	lr
ARM GAS  /tmp/ccqOyY7m.s 			page 24


 1307              	.L257:
 1308 0042 1548     		ldr	r0, .L261+8
 1309 0044 1021     		movs	r1, #16
 1310 0046 FFF7FEFF 		bl	tlsf_malloc_r
 1311 004a 50B1     		cbz	r0, .L259
 1312 004c A400     		lsls	r4, r4, #2
 1313 004e 0123     		movs	r3, #1
 1314 0050 0470     		strb	r4, [r0]
 1315 0052 C5F86402 		str	r0, [r5, #612]
 1316 0056 85F86832 		strb	r3, [r5, #616]
 1317 005a 4670     		strb	r6, [r0, #1]
 1318 005c EBE7     		b	.L249
 1319              	.L252:
 1320 005e 0220     		movs	r0, #2
 1321 0060 70BD     		pop	{r4, r5, r6, pc}
 1322              	.L259:
 1323 0062 0C4B     		ldr	r3, .L261+4
 1324 0064 0720     		movs	r0, #7
 1325 0066 1870     		strb	r0, [r3]
 1326 0068 70BD     		pop	{r4, r5, r6, pc}
 1327              	.L258:
 1328 006a 0C48     		ldr	r0, .L261+12
 1329 006c 0023     		movs	r3, #0
 1330 006e 1022     		movs	r2, #16
 1331 0070 FFF7FEFF 		bl	msgqueue_send
 1332 0074 0028     		cmp	r0, #0
 1333 0076 03DB     		blt	.L260
 1334 0078 0023     		movs	r3, #0
 1335 007a C5F86432 		str	r3, [r5, #612]
 1336 007e DAE7     		b	.L249
 1337              	.L260:
 1338 0080 044B     		ldr	r3, .L261+4
 1339 0082 0620     		movs	r0, #6
 1340 0084 0022     		movs	r2, #0
 1341 0086 85F86822 		strb	r2, [r5, #616]
 1342 008a 1870     		strb	r0, [r3]
 1343 008c 70BD     		pop	{r4, r5, r6, pc}
 1344              	.L262:
 1345 008e 00BF     		.align	2
 1346              	.L261:
 1347 0090 00000000 		.word	.LANCHOR2
 1348 0094 00000000 		.word	.LANCHOR0
 1349 0098 00000000 		.word	ccmHeap
 1350 009c 00000000 		.word	.LANCHOR1
 1351              		.size	sdLogWriteByte, .-sdLogWriteByte
 1352              		.section	.rodata.getFileName.str1.4,"aMS",%progbits,1
 1353              		.align	2
 1354              	.LC4:
 1355 0000 25735C25 		.ascii	"%s\\%s%.04d.LOG\000"
 1355      73252E30 
 1355      34642E4C 
 1355      4F4700
 1356 000f 00       		.align	2
 1357              	.LC5:
 1358 0010 25735C25 		.ascii	"%s\\%s%.ERR\000"
 1358      73252E45 
 1358      525200
ARM GAS  /tmp/ccqOyY7m.s 			page 25


 1359              		.section	.text.getFileName,"ax",%progbits
 1360              		.align	1
 1361              		.p2align 4,,15
 1362              		.global	getFileName
 1363              		.syntax unified
 1364              		.thumb
 1365              		.thumb_func
 1366              		.fpu fpv4-sp-d16
 1367              		.type	getFileName, %function
 1368              	getFileName:
 1369              		@ args = 4, pretend = 0, frame = 384
 1370              		@ frame_needed = 1, uses_anonymous_args = 0
 1371 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1372 0004 E3B0     		sub	sp, sp, #396
 1373 0006 02AF     		add	r7, sp, #8
 1374 0008 0546     		mov	r5, r0
 1375 000a 0846     		mov	r0, r1
 1376 000c 3A60     		str	r2, [r7]
 1377 000e 0E46     		mov	r6, r1
 1378 0010 9A46     		mov	r10, r3
 1379 0012 FFF7FEFF 		bl	strlen
 1380 0016 7F28     		cmp	r0, #127
 1381 0018 94BF     		ite	ls
 1382 001a 821C     		addls	r2, r0, #2
 1383 001c 8222     		movhi	r2, #130
 1384 001e D31D     		adds	r3, r2, #7
 1385 0020 23F00703 		bic	r3, r3, #7
 1386 0024 ADEB030D 		sub	sp, sp, r3
 1387 0028 02AC     		add	r4, sp, #8
 1388 002a 4949     		ldr	r1, .L288
 1389 002c 7A60     		str	r2, [r7, #4]
 1390 002e 2046     		mov	r0, r4
 1391 0030 FFF7FEFF 		bl	strlcpy
 1392 0034 3146     		mov	r1, r6
 1393 0036 7A68     		ldr	r2, [r7, #4]
 1394 0038 2046     		mov	r0, r4
 1395 003a FFF7FEFF 		bl	strlcat
 1396 003e 3146     		mov	r1, r6
 1397 0040 07F10800 		add	r0, r7, #8
 1398 0044 FFF7FEFF 		bl	f_opendir
 1399 0048 0028     		cmp	r0, #0
 1400 004a 64D1     		bne	.L265
 1401              	.L270:
 1402 004c DFF810B1 		ldr	fp, .L288+16
 1403 0050 4FF00008 		mov	r8, #0
 1404              	.L266:
 1405 0054 07F16001 		add	r1, r7, #96
 1406 0058 07F10800 		add	r0, r7, #8
 1407 005c FFF7FEFF 		bl	f_readdir
 1408 0060 80BB     		cbnz	r0, .L269
 1409              	.L287:
 1410 0062 97F87A40 		ldrb	r4, [r7, #122]	@ zero_extendqisi2
 1411 0066 C4B3     		cbz	r4, .L271
 1412 0068 2E2C     		cmp	r4, #46
 1413 006a F3D0     		beq	.L266
 1414 006c 97F86C30 		ldrb	r3, [r7, #108]	@ zero_extendqisi2
 1415 0070 13F01004 		ands	r4, r3, #16
ARM GAS  /tmp/ccqOyY7m.s 			page 26


 1416 0074 EED1     		bne	.L266
 1417 0076 2846     		mov	r0, r5
 1418 0078 FFF7FEFF 		bl	strlen
 1419 007c 07F17A01 		add	r1, r7, #122
 1420 0080 8146     		mov	r9, r0
 1421 0082 0246     		mov	r2, r0
 1422 0084 2846     		mov	r0, r5
 1423 0086 FFF7FEFF 		bl	strncmp
 1424 008a 07F17A03 		add	r3, r7, #122
 1425 008e 03EB0901 		add	r1, r3, r9
 1426 0092 0346     		mov	r3, r0
 1427 0094 F8B9     		cbnz	r0, .L277
 1428 0096 07F17A02 		add	r2, r7, #122
 1429 009a 0846     		mov	r0, r1
 1430 009c 12F80920 		ldrb	r2, [r2, r9]	@ zero_extendqisi2
 1431 00a0 12F80B20 		ldrb	r2, [r2, fp]	@ zero_extendqisi2
 1432 00a4 5207     		lsls	r2, r2, #29
 1433 00a6 02D5     		bpl	.L273
 1434 00a8 FFF7FEFF 		bl	atoi
 1435 00ac 0346     		mov	r3, r0
 1436              	.L273:
 1437 00ae 9845     		cmp	r8, r3
 1438 00b0 07F16001 		add	r1, r7, #96
 1439 00b4 07F10800 		add	r0, r7, #8
 1440 00b8 B8BF     		it	lt
 1441 00ba 9846     		movlt	r8, r3
 1442 00bc FFF7FEFF 		bl	f_readdir
 1443 00c0 0028     		cmp	r0, #0
 1444 00c2 CED0     		beq	.L287
 1445              	.L269:
 1446 00c4 0224     		movs	r4, #2
 1447 00c6 234B     		ldr	r3, .L288+4
 1448 00c8 2046     		mov	r0, r4
 1449 00ca 07F5C277 		add	r7, r7, #388
 1450 00ce 1C70     		strb	r4, [r3]
 1451 00d0 BD46     		mov	sp, r7
 1452              		@ sp needed
 1453 00d2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1454              	.L277:
 1455 00d6 2346     		mov	r3, r4
 1456 00d8 E9E7     		b	.L273
 1457              	.L271:
 1458 00da 07F10800 		add	r0, r7, #8
 1459 00de FFF7FEFF 		bl	f_closedir
 1460 00e2 0446     		mov	r4, r0
 1461 00e4 0028     		cmp	r0, #0
 1462 00e6 EDD1     		bne	.L269
 1463 00e8 42F20E73 		movw	r3, #9998
 1464 00ec 9845     		cmp	r8, r3
 1465 00ee 1FDC     		bgt	.L274
 1466 00f0 D7F8A831 		ldr	r3, [r7, #424]
 1467 00f4 3868     		ldr	r0, [r7]
 1468 00f6 184A     		ldr	r2, .L288+8
 1469 00f8 0095     		str	r5, [sp]
 1470 00fa 4344     		add	r3, r8, r3
 1471 00fc 0193     		str	r3, [sp, #4]
 1472 00fe 5146     		mov	r1, r10
ARM GAS  /tmp/ccqOyY7m.s 			page 27


 1473 0100 3346     		mov	r3, r6
 1474 0102 FFF7FEFF 		bl	chsnprintf
 1475 0106 134B     		ldr	r3, .L288+4
 1476 0108 2046     		mov	r0, r4
 1477 010a 07F5C277 		add	r7, r7, #388
 1478 010e 1C70     		strb	r4, [r3]
 1479 0110 BD46     		mov	sp, r7
 1480              		@ sp needed
 1481 0112 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1482              	.L265:
 1483 0116 2046     		mov	r0, r4
 1484 0118 FFF7FEFF 		bl	f_mkdir
 1485 011c 0028     		cmp	r0, #0
 1486 011e D1D1     		bne	.L269
 1487 0120 3146     		mov	r1, r6
 1488 0122 07F10800 		add	r0, r7, #8
 1489 0126 FFF7FEFF 		bl	f_opendir
 1490 012a 0028     		cmp	r0, #0
 1491 012c 8ED0     		beq	.L270
 1492 012e C9E7     		b	.L269
 1493              	.L274:
 1494 0130 3868     		ldr	r0, [r7]
 1495 0132 0A4A     		ldr	r2, .L288+12
 1496 0134 0095     		str	r5, [sp]
 1497 0136 3346     		mov	r3, r6
 1498 0138 5146     		mov	r1, r10
 1499 013a FFF7FEFF 		bl	chsnprintf
 1500 013e 0B24     		movs	r4, #11
 1501 0140 044B     		ldr	r3, .L288+4
 1502 0142 2046     		mov	r0, r4
 1503 0144 07F5C277 		add	r7, r7, #388
 1504 0148 1C70     		strb	r4, [r3]
 1505 014a BD46     		mov	sp, r7
 1506              		@ sp needed
 1507 014c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1508              	.L289:
 1509              		.align	2
 1510              	.L288:
 1511 0150 00000000 		.word	.LC2
 1512 0154 00000000 		.word	.LANCHOR0
 1513 0158 00000000 		.word	.LC4
 1514 015c 10000000 		.word	.LC5
 1515 0160 01000000 		.word	_ctype_+1
 1516              		.size	getFileName, .-getFileName
 1517              		.section	.text.sdLogOpenLog,"ax",%progbits
 1518              		.align	1
 1519              		.p2align 4,,15
 1520              		.global	sdLogOpenLog
 1521              		.syntax unified
 1522              		.thumb
 1523              		.thumb_func
 1524              		.fpu fpv4-sp-d16
 1525              		.type	sdLogOpenLog, %function
 1526              	sdLogOpenLog:
 1527              		@ args = 20, pretend = 0, frame = 0
 1528              		@ frame_needed = 0, uses_anonymous_args = 0
 1529 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
ARM GAS  /tmp/ccqOyY7m.s 			page 28


 1530 0004 2C4C     		ldr	r4, .L307
 1531 0006 82B0     		sub	sp, sp, #8
 1532 0008 94F86062 		ldrb	r6, [r4, #608]	@ zero_extendqisi2
 1533 000c 9DF82870 		ldrb	r7, [sp, #40]	@ zero_extendqisi2
 1534 0010 9DF83090 		ldrb	r9, [sp, #48]	@ zero_extendqisi2
 1535 0014 0546     		mov	r5, r0
 1536 0016 9846     		mov	r8, r3
 1537 0018 4EB1     		cbz	r6, .L298
 1538 001a 94F8D034 		ldrb	r3, [r4, #1232]	@ zero_extendqisi2
 1539 001e 002B     		cmp	r3, #0
 1540 0020 47D0     		beq	.L304
 1541 0022 264B     		ldr	r3, .L307+4
 1542 0024 0520     		movs	r0, #5
 1543 0026 1870     		strb	r0, [r3]
 1544 0028 02B0     		add	sp, sp, #8
 1545              		@ sp needed
 1546 002a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1547              	.L298:
 1548 002e B446     		mov	ip, r6
 1549              	.L291:
 1550 0030 4FF41C73 		mov	r3, #624
 1551 0034 03FB0C44 		mla	r4, r3, ip, r4
 1552 0038 0123     		movs	r3, #1
 1553 003a 0093     		str	r3, [sp]
 1554 003c 1046     		mov	r0, r2
 1555 003e 84F86032 		strb	r3, [r4, #608]
 1556 0042 DDE90D23 		ldrd	r2, r3, [sp, #52]
 1557 0046 FFF7FEFF 		bl	getFileName
 1558 004a 8246     		mov	r10, r0
 1559 004c E8B9     		cbnz	r0, .L305
 1560 004e 0D99     		ldr	r1, [sp, #52]
 1561 0050 0A22     		movs	r2, #10
 1562 0052 2046     		mov	r0, r4
 1563 0054 FFF7FEFF 		bl	f_open
 1564 0058 00BB     		cbnz	r0, .L306
 1565 005a 94F86032 		ldrb	r3, [r4, #608]	@ zero_extendqisi2
 1566 005e 84F86172 		strb	r7, [r4, #609]
 1567 0062 C4E99680 		strd	r8, r0, [r4, #600]
 1568 0066 13B3     		cbz	r3, .L299
 1569 0068 0B9B     		ldr	r3, [sp, #44]
 1570 006a CDF80090 		str	r9, [sp]
 1571 006e 1A05     		lsls	r2, r3, #20
 1572 0070 0346     		mov	r3, r0
 1573 0072 2046     		mov	r0, r4
 1574 0074 FFF7FEFF 		bl	f_expand
 1575 0078 0028     		cmp	r0, #0
 1576 007a 18BF     		it	ne
 1577 007c 0A20     		movne	r0, #10
 1578              	.L297:
 1579 007e 0F4B     		ldr	r3, .L307+4
 1580 0080 2E70     		strb	r6, [r5]
 1581 0082 1870     		strb	r0, [r3]
 1582 0084 02B0     		add	sp, sp, #8
 1583              		@ sp needed
 1584 0086 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1585              	.L305:
 1586 008a 0C4B     		ldr	r3, .L307+4
ARM GAS  /tmp/ccqOyY7m.s 			page 29


 1587 008c 0220     		movs	r0, #2
 1588 008e 0022     		movs	r2, #0
 1589 0090 84F86022 		strb	r2, [r4, #608]
 1590 0094 1870     		strb	r0, [r3]
 1591 0096 02B0     		add	sp, sp, #8
 1592              		@ sp needed
 1593 0098 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1594              	.L306:
 1595 009c 0223     		movs	r3, #2
 1596 009e 074A     		ldr	r2, .L307+4
 1597 00a0 84F860A2 		strb	r10, [r4, #608]
 1598 00a4 1846     		mov	r0, r3
 1599 00a6 1370     		strb	r3, [r2]
 1600 00a8 02B0     		add	sp, sp, #8
 1601              		@ sp needed
 1602 00aa BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1603              	.L299:
 1604 00ae 0220     		movs	r0, #2
 1605 00b0 E5E7     		b	.L297
 1606              	.L304:
 1607 00b2 0126     		movs	r6, #1
 1608 00b4 B446     		mov	ip, r6
 1609 00b6 BBE7     		b	.L291
 1610              	.L308:
 1611              		.align	2
 1612              	.L307:
 1613 00b8 00000000 		.word	.LANCHOR2
 1614 00bc 00000000 		.word	.LANCHOR0
 1615              		.size	sdLogOpenLog, .-sdLogOpenLog
 1616              		.section	.text.removeEmptyLogs,"ax",%progbits
 1617              		.align	1
 1618              		.p2align 4,,15
 1619              		.global	removeEmptyLogs
 1620              		.syntax unified
 1621              		.thumb
 1622              		.thumb_func
 1623              		.fpu fpv4-sp-d16
 1624              		.type	removeEmptyLogs, %function
 1625              	removeEmptyLogs:
 1626              		@ args = 0, pretend = 0, frame = 504
 1627              		@ frame_needed = 0, uses_anonymous_args = 0
 1628 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1629 0002 FFB0     		sub	sp, sp, #508
 1630 0004 0646     		mov	r6, r0
 1631 0006 0C46     		mov	r4, r1
 1632 0008 0146     		mov	r1, r0
 1633 000a 6846     		mov	r0, sp
 1634 000c 1546     		mov	r5, r2
 1635 000e FFF7FEFF 		bl	f_opendir
 1636 0012 0028     		cmp	r0, #0
 1637 0014 42D1     		bne	.L321
 1638 0016 244F     		ldr	r7, .L325
 1639              	.L310:
 1640 0018 36A9     		add	r1, sp, #216
 1641 001a 6846     		mov	r0, sp
 1642 001c FFF7FEFF 		bl	f_readdir
 1643 0020 70BB     		cbnz	r0, .L312
ARM GAS  /tmp/ccqOyY7m.s 			page 30


 1644 0022 9DF8F230 		ldrb	r3, [sp, #242]	@ zero_extendqisi2
 1645 0026 83B3     		cbz	r3, .L313
 1646 0028 2E2B     		cmp	r3, #46
 1647 002a F5D0     		beq	.L310
 1648 002c 9DF8E430 		ldrb	r3, [sp, #228]	@ zero_extendqisi2
 1649 0030 DB06     		lsls	r3, r3, #27
 1650 0032 2046     		mov	r0, r4
 1651 0034 F0D4     		bmi	.L310
 1652 0036 FFF7FEFF 		bl	strlen
 1653 003a 2146     		mov	r1, r4
 1654 003c 0246     		mov	r2, r0
 1655 003e 0DF1F200 		add	r0, sp, #242
 1656 0042 FFF7FEFF 		bl	strncmp
 1657 0046 0028     		cmp	r0, #0
 1658 0048 E6D1     		bne	.L310
 1659 004a DDE93623 		ldrd	r2, r3, [sp, #216]
 1660 004e 9542     		cmp	r5, r2
 1661 0050 70EB0303 		sbcs	r3, r0, r3
 1662 0054 E0D3     		bcc	.L310
 1663 0056 8022     		movs	r2, #128
 1664 0058 3146     		mov	r1, r6
 1665 005a 16A8     		add	r0, sp, #88
 1666 005c FFF7FEFF 		bl	strlcpy
 1667 0060 8022     		movs	r2, #128
 1668 0062 3946     		mov	r1, r7
 1669 0064 16A8     		add	r0, sp, #88
 1670 0066 FFF7FEFF 		bl	strlcat
 1671 006a 8022     		movs	r2, #128
 1672 006c 0DF1F201 		add	r1, sp, #242
 1673 0070 16A8     		add	r0, sp, #88
 1674 0072 FFF7FEFF 		bl	strlcat
 1675 0076 16A8     		add	r0, sp, #88
 1676 0078 FFF7FEFF 		bl	f_unlink
 1677 007c 0028     		cmp	r0, #0
 1678 007e CBD0     		beq	.L310
 1679              	.L312:
 1680 0080 0A4B     		ldr	r3, .L325+4
 1681 0082 0220     		movs	r0, #2
 1682 0084 1870     		strb	r0, [r3]
 1683 0086 7FB0     		add	sp, sp, #508
 1684              		@ sp needed
 1685 0088 F0BD     		pop	{r4, r5, r6, r7, pc}
 1686              	.L313:
 1687 008a 6846     		mov	r0, sp
 1688 008c FFF7FEFF 		bl	f_closedir
 1689 0090 0028     		cmp	r0, #0
 1690 0092 F5D1     		bne	.L312
 1691 0094 054B     		ldr	r3, .L325+4
 1692 0096 1870     		strb	r0, [r3]
 1693 0098 7FB0     		add	sp, sp, #508
 1694              		@ sp needed
 1695 009a F0BD     		pop	{r4, r5, r6, r7, pc}
 1696              	.L321:
 1697 009c 034B     		ldr	r3, .L325+4
 1698 009e 0320     		movs	r0, #3
 1699 00a0 1870     		strb	r0, [r3]
 1700 00a2 7FB0     		add	sp, sp, #508
ARM GAS  /tmp/ccqOyY7m.s 			page 31


 1701              		@ sp needed
 1702 00a4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1703              	.L326:
 1704 00a6 00BF     		.align	2
 1705              	.L325:
 1706 00a8 00000000 		.word	.LC2
 1707 00ac 00000000 		.word	.LANCHOR0
 1708              		.size	removeEmptyLogs, .-removeEmptyLogs
 1709              		.section	.text.sdLogGetNbBytesWrittenToStorage,"ax",%progbits
 1710              		.align	1
 1711              		.p2align 4,,15
 1712              		.global	sdLogGetNbBytesWrittenToStorage
 1713              		.syntax unified
 1714              		.thumb
 1715              		.thumb_func
 1716              		.fpu fpv4-sp-d16
 1717              		.type	sdLogGetNbBytesWrittenToStorage, %function
 1718              	sdLogGetNbBytesWrittenToStorage:
 1719              		@ args = 0, pretend = 0, frame = 0
 1720              		@ frame_needed = 0, uses_anonymous_args = 0
 1721              		@ link register save eliminated.
 1722 0000 014B     		ldr	r3, .L328
 1723 0002 1868     		ldr	r0, [r3]
 1724 0004 7047     		bx	lr
 1725              	.L329:
 1726 0006 00BF     		.align	2
 1727              	.L328:
 1728 0008 00000000 		.word	.LANCHOR3
 1729              		.size	sdLogGetNbBytesWrittenToStorage, .-sdLogGetNbBytesWrittenToStorage
 1730              		.section	.text.sdLogGetStorageStatus,"ax",%progbits
 1731              		.align	1
 1732              		.p2align 4,,15
 1733              		.global	sdLogGetStorageStatus
 1734              		.syntax unified
 1735              		.thumb
 1736              		.thumb_func
 1737              		.fpu fpv4-sp-d16
 1738              		.type	sdLogGetStorageStatus, %function
 1739              	sdLogGetStorageStatus:
 1740              		@ args = 0, pretend = 0, frame = 0
 1741              		@ frame_needed = 0, uses_anonymous_args = 0
 1742              		@ link register save eliminated.
 1743 0000 014B     		ldr	r3, .L331
 1744 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1745 0004 7047     		bx	lr
 1746              	.L332:
 1747 0006 00BF     		.align	2
 1748              	.L331:
 1749 0008 00000000 		.word	.LANCHOR0
 1750              		.size	sdLogGetStorageStatus, .-sdLogGetStorageStatus
 1751              		.section	.bss.messagesQueue,"aw",%nobits
 1752              		.align	2
 1753              		.set	.LANCHOR1,. + 0
 1754              		.type	messagesQueue, %object
 1755              		.size	messagesQueue, 44
 1756              	messagesQueue:
 1757 0000 00000000 		.space	44
ARM GAS  /tmp/ccqOyY7m.s 			page 32


 1757      00000000 
 1757      00000000 
 1757      00000000 
 1757      00000000 
 1758              		.section	.bss.nbBytesWritten,"aw",%nobits
 1759              		.align	2
 1760              		.set	.LANCHOR3,. + 0
 1761              		.type	nbBytesWritten, %object
 1762              		.size	nbBytesWritten, 4
 1763              	nbBytesWritten:
 1764 0000 00000000 		.space	4
 1765              		.section	.bss.sdLogThd,"aw",%nobits
 1766              		.align	2
 1767              		.set	.LANCHOR4,. + 0
 1768              		.type	sdLogThd, %object
 1769              		.size	sdLogThd, 4
 1770              	sdLogThd:
 1771 0000 00000000 		.space	4
 1772              		.section	.bss.storageStatus,"aw",%nobits
 1773              		.set	.LANCHOR0,. + 0
 1774              		.type	storageStatus, %object
 1775              		.size	storageStatus, 1
 1776              	storageStatus:
 1777 0000 00       		.space	1
 1778              		.section	.ram0,"aw"
 1779              		.align	3
 1780              		.set	.LANCHOR5,. + 0
 1781              		.type	waThdSdLog, %object
 1782              		.size	waThdSdLog, 2616
 1783              	waThdSdLog:
 1784 0000 00000000 		.space	2616
 1784      00000000 
 1784      00000000 
 1784      00000000 
 1784      00000000 
 1785              		.section	.ram0_clear,"aw"
 1786              		.align	3
 1787              		.type	perfBuffers.0, %object
 1788              		.size	perfBuffers.0, 16392
 1789              	perfBuffers.0:
 1790 0000 00000000 		.space	16392
 1790      00000000 
 1790      00000000 
 1790      00000000 
 1790      00000000 
 1791              		.type	queMbBuffer, %object
 1792              		.size	queMbBuffer, 4096
 1793              	queMbBuffer:
 1794 4008 00000000 		.space	4096
 1794      00000000 
 1794      00000000 
 1794      00000000 
 1794      00000000 
 1795              		.section	.ram0_init,"aw"
 1796              		.align	3
 1797              		.set	.LANCHOR2,. + 0
 1798              		.type	fileDes, %object
ARM GAS  /tmp/ccqOyY7m.s 			page 33


 1799              		.size	fileDes, 1248
 1800              	fileDes:
 1801 0000 00000000 		.space	1248
 1801      00000000 
 1801      00000000 
 1801      00000000 
 1801      00000000 
 1802              		.type	fatfs, %object
 1803              		.size	fatfs, 592
 1804              	fatfs:
 1805 04e0 00000000 		.space	592
 1805      00000000 
 1805      00000000 
 1805      00000000 
 1805      00000000 
 1806              		.ident	"GCC: (15:10.3-2021.07-4) 10.3.1 20210621 (release)"
ARM GAS  /tmp/ccqOyY7m.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sdLog.c
     /tmp/ccqOyY7m.s:15     .rodata.thdSdLog.str1.4:0000000000000000 $d
     /tmp/ccqOyY7m.s:22     .text.thdSdLog:0000000000000000 $t
     /tmp/ccqOyY7m.s:30     .text.thdSdLog:0000000000000000 thdSdLog
     /tmp/ccqOyY7m.s:260    .text.thdSdLog:0000000000000218 $d
     /tmp/ccqOyY7m.s:1789   .ram0_clear:0000000000000000 perfBuffers.0
     /tmp/ccqOyY7m.s:271    .text.cleanQueue.part.0:0000000000000000 $t
     /tmp/ccqOyY7m.s:278    .text.cleanQueue.part.0:0000000000000000 cleanQueue.part.0
     /tmp/ccqOyY7m.s:331    .text.cleanQueue.part.0:0000000000000060 $d
     /tmp/ccqOyY7m.s:335    .rodata.sdLogInit.str1.4:0000000000000000 $d
     /tmp/ccqOyY7m.s:339    .text.sdLogInit:0000000000000000 $t
     /tmp/ccqOyY7m.s:347    .text.sdLogInit:0000000000000000 sdLogInit
     /tmp/ccqOyY7m.s:441    .text.sdLogInit:00000000000000d0 $d
     /tmp/ccqOyY7m.s:1793   .ram0_clear:0000000000004008 queMbBuffer
     /tmp/ccqOyY7m.s:453    .rodata.sdLogFinish.str1.4:0000000000000000 $d
     /tmp/ccqOyY7m.s:457    .text.sdLogFinish:0000000000000000 $t
     /tmp/ccqOyY7m.s:465    .text.sdLogFinish:0000000000000000 sdLogFinish
     /tmp/ccqOyY7m.s:482    .text.sdLogFinish:0000000000000018 $d
     /tmp/ccqOyY7m.s:486    .text.sdLogWriteLog:0000000000000000 $t
     /tmp/ccqOyY7m.s:494    .text.sdLogWriteLog:0000000000000000 sdLogWriteLog
     /tmp/ccqOyY7m.s:587    .text.sdLogWriteLog:00000000000000c4 $d
     /tmp/ccqOyY7m.s:593    .text.sdLogFlushLog:0000000000000000 $t
     /tmp/ccqOyY7m.s:601    .text.sdLogFlushLog:0000000000000000 sdLogFlushLog
     /tmp/ccqOyY7m.s:667    .text.sdLogFlushLog:0000000000000080 $d
     /tmp/ccqOyY7m.s:673    .text.sdLogFlushAllLogs:0000000000000000 $t
     /tmp/ccqOyY7m.s:681    .text.sdLogFlushAllLogs:0000000000000000 sdLogFlushAllLogs
     /tmp/ccqOyY7m.s:719    .text.sdLogFlushAllLogs:0000000000000044 $d
     /tmp/ccqOyY7m.s:724    .text.sdLogCloseLog:0000000000000000 $t
     /tmp/ccqOyY7m.s:732    .text.sdLogCloseLog:0000000000000000 sdLogCloseLog
     /tmp/ccqOyY7m.s:779    .text.sdLogCloseLog:000000000000005c $d
     /tmp/ccqOyY7m.s:785    .text.sdLogCloseAllLogs:0000000000000000 $t
     /tmp/ccqOyY7m.s:793    .text.sdLogCloseAllLogs:0000000000000000 sdLogCloseAllLogs
     /tmp/ccqOyY7m.s:976    .text.sdLogCloseAllLogs:0000000000000188 $d
     /tmp/ccqOyY7m.s:985    .text.sdLogWriteRaw:0000000000000000 $t
     /tmp/ccqOyY7m.s:993    .text.sdLogWriteRaw:0000000000000000 sdLogWriteRaw
     /tmp/ccqOyY7m.s:1065   .text.sdLogWriteRaw:00000000000000a0 $d
     /tmp/ccqOyY7m.s:1071   .text.sdLogAllocSDB:0000000000000000 $t
     /tmp/ccqOyY7m.s:1079   .text.sdLogAllocSDB:0000000000000000 sdLogAllocSDB
     /tmp/ccqOyY7m.s:1120   .text.sdLogAllocSDB:0000000000000048 $d
     /tmp/ccqOyY7m.s:1124   .text.sdLogGetBufferFromSDB:0000000000000000 $t
     /tmp/ccqOyY7m.s:1132   .text.sdLogGetBufferFromSDB:0000000000000000 sdLogGetBufferFromSDB
     /tmp/ccqOyY7m.s:1143   .text.sdLogSeekBufferFromSDB:0000000000000000 $t
     /tmp/ccqOyY7m.s:1151   .text.sdLogSeekBufferFromSDB:0000000000000000 sdLogSeekBufferFromSDB
     /tmp/ccqOyY7m.s:1165   .text.sdLogGetBufferLenFromSDB:0000000000000000 $t
     /tmp/ccqOyY7m.s:1173   .text.sdLogGetBufferLenFromSDB:0000000000000000 sdLogGetBufferLenFromSDB
     /tmp/ccqOyY7m.s:1182   .text.sdLogWriteSDB:0000000000000000 $t
     /tmp/ccqOyY7m.s:1190   .text.sdLogWriteSDB:0000000000000000 sdLogWriteSDB
     /tmp/ccqOyY7m.s:1261   .text.sdLogWriteSDB:000000000000008c $d
     /tmp/ccqOyY7m.s:1267   .text.sdLogWriteByte:0000000000000000 $t
     /tmp/ccqOyY7m.s:1275   .text.sdLogWriteByte:0000000000000000 sdLogWriteByte
     /tmp/ccqOyY7m.s:1347   .text.sdLogWriteByte:0000000000000090 $d
     /tmp/ccqOyY7m.s:1353   .rodata.getFileName.str1.4:0000000000000000 $d
     /tmp/ccqOyY7m.s:1360   .text.getFileName:0000000000000000 $t
     /tmp/ccqOyY7m.s:1368   .text.getFileName:0000000000000000 getFileName
     /tmp/ccqOyY7m.s:1511   .text.getFileName:0000000000000150 $d
     /tmp/ccqOyY7m.s:1518   .text.sdLogOpenLog:0000000000000000 $t
ARM GAS  /tmp/ccqOyY7m.s 			page 35


     /tmp/ccqOyY7m.s:1526   .text.sdLogOpenLog:0000000000000000 sdLogOpenLog
     /tmp/ccqOyY7m.s:1613   .text.sdLogOpenLog:00000000000000b8 $d
     /tmp/ccqOyY7m.s:1617   .text.removeEmptyLogs:0000000000000000 $t
     /tmp/ccqOyY7m.s:1625   .text.removeEmptyLogs:0000000000000000 removeEmptyLogs
     /tmp/ccqOyY7m.s:1706   .text.removeEmptyLogs:00000000000000a8 $d
     /tmp/ccqOyY7m.s:1710   .text.sdLogGetNbBytesWrittenToStorage:0000000000000000 $t
     /tmp/ccqOyY7m.s:1718   .text.sdLogGetNbBytesWrittenToStorage:0000000000000000 sdLogGetNbBytesWrittenToStorage
     /tmp/ccqOyY7m.s:1728   .text.sdLogGetNbBytesWrittenToStorage:0000000000000008 $d
     /tmp/ccqOyY7m.s:1731   .text.sdLogGetStorageStatus:0000000000000000 $t
     /tmp/ccqOyY7m.s:1739   .text.sdLogGetStorageStatus:0000000000000000 sdLogGetStorageStatus
     /tmp/ccqOyY7m.s:1749   .text.sdLogGetStorageStatus:0000000000000008 $d
     /tmp/ccqOyY7m.s:1752   .bss.messagesQueue:0000000000000000 $d
     /tmp/ccqOyY7m.s:1756   .bss.messagesQueue:0000000000000000 messagesQueue
     /tmp/ccqOyY7m.s:1759   .bss.nbBytesWritten:0000000000000000 $d
     /tmp/ccqOyY7m.s:1763   .bss.nbBytesWritten:0000000000000000 nbBytesWritten
     /tmp/ccqOyY7m.s:1766   .bss.sdLogThd:0000000000000000 $d
     /tmp/ccqOyY7m.s:1770   .bss.sdLogThd:0000000000000000 sdLogThd
     /tmp/ccqOyY7m.s:1776   .bss.storageStatus:0000000000000000 storageStatus
     /tmp/ccqOyY7m.s:1777   .bss.storageStatus:0000000000000000 $d
     /tmp/ccqOyY7m.s:1779   .ram0:0000000000000000 $d
     /tmp/ccqOyY7m.s:1783   .ram0:0000000000000000 waThdSdLog
     /tmp/ccqOyY7m.s:1786   .ram0_clear:0000000000000000 $d
     /tmp/ccqOyY7m.s:1796   .ram0_init:0000000000000000 $d
     /tmp/ccqOyY7m.s:1800   .ram0_init:0000000000000000 fileDes
     /tmp/ccqOyY7m.s:1804   .ram0_init:00000000000004e0 fatfs

UNDEFINED SYMBOLS
msgqueue_pop
tlsf_free_r
chThdExit
memcpy
f_close
f_write
f_sync
ch0
ccmHeap
msgqueue_pop_timeout
tlsf_stat_r
__stats_start_measure_crit_thd
__stats_stop_measure_crit_thd
msgqueue_init
sdc_lld_is_card_inserted
sdio_connect
chThdSleep
sdio_disconnect
f_mount
f_getfree
chThdCreateStatic
tlsf_malloc_r
chvsnprintf
strnlen
tlsf_realloc_r
msgqueue_send
chThdWait
msgqueue_copy_send
strlen
strlcpy
ARM GAS  /tmp/ccqOyY7m.s 			page 36


strlcat
f_opendir
f_readdir
strncmp
atoi
f_closedir
chsnprintf
f_mkdir
_ctype_
f_open
f_expand
f_unlink
