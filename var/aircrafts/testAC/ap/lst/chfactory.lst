ARM GAS  /tmp/ccCvLj1D.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"chfactory.c"
  13              		.text
  14              		.section	.text.chCoreAllocAlignedI,"ax",%progbits
  15              		.align	1
  16              		.p2align 4,,15
  17              		.arch armv7e-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv4-sp-d16
  22              		.type	chCoreAllocAlignedI, %function
  23              	chCoreAllocAlignedI:
  24              		@ args = 0, pretend = 0, frame = 0
  25              		@ frame_needed = 0, uses_anonymous_args = 0
  26              		@ link register save eliminated.
  27 0000 0022     		movs	r2, #0
  28 0002 FFF7FEBF 		b	chCoreAllocFromTopI
  29              		.size	chCoreAllocAlignedI, .-chCoreAllocAlignedI
  30 0006 00BF     		.section	.text.dyn_create_object_heap,"ax",%progbits
  31              		.align	1
  32              		.p2align 4,,15
  33              		.syntax unified
  34              		.thumb
  35              		.thumb_func
  36              		.fpu fpv4-sp-d16
  37              		.type	dyn_create_object_heap, %function
  38              	dyn_create_object_heap:
  39              		@ args = 0, pretend = 0, frame = 0
  40              		@ frame_needed = 0, uses_anonymous_args = 0
  41 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  42 0004 0C68     		ldr	r4, [r1]
  43 0006 A142     		cmp	r1, r4
  44 0008 0E46     		mov	r6, r1
  45 000a 0546     		mov	r5, r0
  46 000c 1746     		mov	r7, r2
  47 000e 9846     		mov	r8, r3
  48 0010 03D1     		bne	.L6
  49 0012 0EE0     		b	.L4
  50              	.L23:
  51 0014 2468     		ldr	r4, [r4]
  52 0016 A642     		cmp	r6, r4
  53 0018 0BD0     		beq	.L4
  54              	.L6:
  55 001a 04F10800 		add	r0, r4, #8
  56 001e 0822     		movs	r2, #8
  57 0020 2946     		mov	r1, r5
ARM GAS  /tmp/ccCvLj1D.s 			page 2


  58 0022 FFF7FEFF 		bl	strncmp
  59 0026 0028     		cmp	r0, #0
  60 0028 F4D1     		bne	.L23
  61 002a 14B1     		cbz	r4, .L4
  62              	.L8:
  63 002c 0020     		movs	r0, #0
  64 002e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
  65              	.L4:
  66 0032 4246     		mov	r2, r8
  67 0034 3946     		mov	r1, r7
  68 0036 0020     		movs	r0, #0
  69 0038 FFF7FEFF 		bl	chHeapAllocAligned
  70 003c 0028     		cmp	r0, #0
  71 003e F5D0     		beq	.L8
  72 0040 00F10802 		add	r2, r0, #8
  73 0044 05F10801 		add	r1, r5, #8
  74              	.L10:
  75 0048 15F8013B 		ldrb	r3, [r5], #1	@ zero_extendqisi2
  76 004c 02F8013B 		strb	r3, [r2], #1
  77 0050 0BB1     		cbz	r3, .L9
  78 0052 A942     		cmp	r1, r5
  79 0054 F8D1     		bne	.L10
  80              	.L9:
  81 0056 3368     		ldr	r3, [r6]
  82 0058 0122     		movs	r2, #1
  83 005a C0E90032 		strd	r3, r2, [r0]
  84 005e 3060     		str	r0, [r6]
  85 0060 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
  86              		.size	dyn_create_object_heap, .-dyn_create_object_heap
  87              		.section	.text.__factory_init,"ax",%progbits
  88              		.align	1
  89              		.p2align 4,,15
  90              		.global	__factory_init
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  94              		.fpu fpv4-sp-d16
  95              		.type	__factory_init, %function
  96              	__factory_init:
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99 0000 10B5     		push	{r4, lr}
 100 0002 124C     		ldr	r4, .L26
 101 0004 2046     		mov	r0, r4
 102 0006 FFF7FEFF 		bl	chMtxObjectInit
 103 000a 1421     		movs	r1, #20
 104 000c 04F11000 		add	r0, r4, #16
 105 0010 0F4B     		ldr	r3, .L26+4
 106 0012 2061     		str	r0, [r4, #16]
 107 0014 0422     		movs	r2, #4
 108 0016 6018     		adds	r0, r4, r1
 109 0018 FFF7FEFF 		bl	chPoolObjectInitAligned
 110 001c 04F12400 		add	r0, r4, #36
 111 0020 04F12801 		add	r1, r4, #40
 112 0024 C4E90901 		strd	r0, r1, [r4, #36]
 113 0028 094B     		ldr	r3, .L26+4
 114 002a 0422     		movs	r2, #4
ARM GAS  /tmp/ccCvLj1D.s 			page 3


 115 002c 1C21     		movs	r1, #28
 116 002e 04F12C00 		add	r0, r4, #44
 117 0032 FFF7FEFF 		bl	chPoolObjectInitAligned
 118 0036 04F13C01 		add	r1, r4, #60
 119 003a 04F14002 		add	r2, r4, #64
 120 003e 04F14403 		add	r3, r4, #68
 121 0042 C4E90F12 		strd	r1, r2, [r4, #60]
 122 0046 6364     		str	r3, [r4, #68]
 123 0048 10BD     		pop	{r4, pc}
 124              	.L27:
 125 004a 00BF     		.align	2
 126              	.L26:
 127 004c 00000000 		.word	.LANCHOR0
 128 0050 00000000 		.word	chCoreAllocAlignedI
 129              		.size	__factory_init, .-__factory_init
 130              		.section	.text.chFactoryRegisterObject,"ax",%progbits
 131              		.align	1
 132              		.p2align 4,,15
 133              		.global	chFactoryRegisterObject
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu fpv4-sp-d16
 138              		.type	chFactoryRegisterObject, %function
 139              	chFactoryRegisterObject:
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 143 0004 1E4F     		ldr	r7, .L47
 144 0006 3E46     		mov	r6, r7
 145 0008 0546     		mov	r5, r0
 146 000a 3846     		mov	r0, r7
 147 000c 8846     		mov	r8, r1
 148 000e FFF7FEFF 		bl	chMtxLock
 149 0012 56F8104F 		ldr	r4, [r6, #16]!
 150 0016 B442     		cmp	r4, r6
 151 0018 03D1     		bne	.L31
 152 001a 12E0     		b	.L29
 153              	.L46:
 154 001c 2468     		ldr	r4, [r4]
 155 001e B442     		cmp	r4, r6
 156 0020 0FD0     		beq	.L29
 157              	.L31:
 158 0022 04F10800 		add	r0, r4, #8
 159 0026 0822     		movs	r2, #8
 160 0028 2946     		mov	r1, r5
 161 002a FFF7FEFF 		bl	strncmp
 162 002e 0028     		cmp	r0, #0
 163 0030 F4D1     		bne	.L46
 164 0032 34B1     		cbz	r4, .L29
 165              	.L32:
 166 0034 1248     		ldr	r0, .L47
 167 0036 0024     		movs	r4, #0
 168 0038 FFF7FEFF 		bl	chMtxUnlock
 169 003c 2046     		mov	r0, r4
 170 003e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 171              	.L29:
ARM GAS  /tmp/ccCvLj1D.s 			page 4


 172 0042 1048     		ldr	r0, .L47+4
 173 0044 FFF7FEFF 		bl	chPoolAlloc
 174 0048 0446     		mov	r4, r0
 175 004a 0028     		cmp	r0, #0
 176 004c F2D0     		beq	.L32
 177 004e 00F10802 		add	r2, r0, #8
 178 0052 05F10801 		add	r1, r5, #8
 179              	.L34:
 180 0056 15F8013B 		ldrb	r3, [r5], #1	@ zero_extendqisi2
 181 005a 02F8013B 		strb	r3, [r2], #1
 182 005e 0BB1     		cbz	r3, .L33
 183 0060 8D42     		cmp	r5, r1
 184 0062 F8D1     		bne	.L34
 185              	.L33:
 186 0064 3B69     		ldr	r3, [r7, #16]
 187 0066 0648     		ldr	r0, .L47
 188 0068 0122     		movs	r2, #1
 189 006a C4E90032 		strd	r3, r2, [r4]
 190 006e 3C61     		str	r4, [r7, #16]
 191 0070 C4F81080 		str	r8, [r4, #16]
 192 0074 FFF7FEFF 		bl	chMtxUnlock
 193 0078 2046     		mov	r0, r4
 194 007a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 195              	.L48:
 196 007e 00BF     		.align	2
 197              	.L47:
 198 0080 00000000 		.word	.LANCHOR0
 199 0084 14000000 		.word	.LANCHOR0+20
 200              		.size	chFactoryRegisterObject, .-chFactoryRegisterObject
 201              		.section	.text.chFactoryFindObject,"ax",%progbits
 202              		.align	1
 203              		.p2align 4,,15
 204              		.global	chFactoryFindObject
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu fpv4-sp-d16
 209              		.type	chFactoryFindObject, %function
 210              	chFactoryFindObject:
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213 0000 124B     		ldr	r3, .L57
 214 0002 70B5     		push	{r4, r5, r6, lr}
 215 0004 1D46     		mov	r5, r3
 216 0006 0646     		mov	r6, r0
 217 0008 1846     		mov	r0, r3
 218 000a FFF7FEFF 		bl	chMtxLock
 219 000e 55F8104F 		ldr	r4, [r5, #16]!
 220 0012 AC42     		cmp	r4, r5
 221 0014 03D1     		bne	.L53
 222 0016 13E0     		b	.L54
 223              	.L51:
 224 0018 2468     		ldr	r4, [r4]
 225 001a AC42     		cmp	r4, r5
 226 001c 10D0     		beq	.L54
 227              	.L53:
 228 001e 04F10800 		add	r0, r4, #8
ARM GAS  /tmp/ccCvLj1D.s 			page 5


 229 0022 0822     		movs	r2, #8
 230 0024 3146     		mov	r1, r6
 231 0026 FFF7FEFF 		bl	strncmp
 232 002a 0028     		cmp	r0, #0
 233 002c F4D1     		bne	.L51
 234 002e 14B1     		cbz	r4, .L50
 235 0030 6368     		ldr	r3, [r4, #4]
 236 0032 0133     		adds	r3, r3, #1
 237 0034 6360     		str	r3, [r4, #4]
 238              	.L50:
 239 0036 0548     		ldr	r0, .L57
 240 0038 FFF7FEFF 		bl	chMtxUnlock
 241 003c 2046     		mov	r0, r4
 242 003e 70BD     		pop	{r4, r5, r6, pc}
 243              	.L54:
 244 0040 0248     		ldr	r0, .L57
 245 0042 0024     		movs	r4, #0
 246 0044 FFF7FEFF 		bl	chMtxUnlock
 247 0048 2046     		mov	r0, r4
 248 004a 70BD     		pop	{r4, r5, r6, pc}
 249              	.L58:
 250              		.align	2
 251              	.L57:
 252 004c 00000000 		.word	.LANCHOR0
 253              		.size	chFactoryFindObject, .-chFactoryFindObject
 254              		.section	.text.chFactoryFindObjectByPointer,"ax",%progbits
 255              		.align	1
 256              		.p2align 4,,15
 257              		.global	chFactoryFindObjectByPointer
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 261              		.fpu fpv4-sp-d16
 262              		.type	chFactoryFindObjectByPointer, %function
 263              	chFactoryFindObjectByPointer:
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266 0000 70B5     		push	{r4, r5, r6, lr}
 267 0002 0F4D     		ldr	r5, .L66
 268 0004 0646     		mov	r6, r0
 269 0006 2C69     		ldr	r4, [r5, #16]
 270 0008 2846     		mov	r0, r5
 271 000a FFF7FEFF 		bl	chMtxLock
 272 000e 05F11002 		add	r2, r5, #16
 273 0012 9442     		cmp	r4, r2
 274 0014 03D1     		bne	.L63
 275 0016 0DE0     		b	.L60
 276              	.L61:
 277 0018 2468     		ldr	r4, [r4]
 278 001a 9442     		cmp	r4, r2
 279 001c 0AD0     		beq	.L60
 280              	.L63:
 281 001e 2369     		ldr	r3, [r4, #16]
 282 0020 B342     		cmp	r3, r6
 283 0022 F9D1     		bne	.L61
 284 0024 6368     		ldr	r3, [r4, #4]
 285 0026 0648     		ldr	r0, .L66
ARM GAS  /tmp/ccCvLj1D.s 			page 6


 286 0028 0133     		adds	r3, r3, #1
 287 002a 6360     		str	r3, [r4, #4]
 288 002c FFF7FEFF 		bl	chMtxUnlock
 289 0030 2046     		mov	r0, r4
 290 0032 70BD     		pop	{r4, r5, r6, pc}
 291              	.L60:
 292 0034 0248     		ldr	r0, .L66
 293 0036 0024     		movs	r4, #0
 294 0038 FFF7FEFF 		bl	chMtxUnlock
 295 003c 2046     		mov	r0, r4
 296 003e 70BD     		pop	{r4, r5, r6, pc}
 297              	.L67:
 298              		.align	2
 299              	.L66:
 300 0040 00000000 		.word	.LANCHOR0
 301              		.size	chFactoryFindObjectByPointer, .-chFactoryFindObjectByPointer
 302              		.section	.text.chFactoryReleaseObject,"ax",%progbits
 303              		.align	1
 304              		.p2align 4,,15
 305              		.global	chFactoryReleaseObject
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu fpv4-sp-d16
 310              		.type	chFactoryReleaseObject, %function
 311              	chFactoryReleaseObject:
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314 0000 10B5     		push	{r4, lr}
 315 0002 0446     		mov	r4, r0
 316 0004 0D48     		ldr	r0, .L77
 317 0006 FFF7FEFF 		bl	chMtxLock
 318 000a 6368     		ldr	r3, [r4, #4]
 319 000c 013B     		subs	r3, r3, #1
 320 000e 6360     		str	r3, [r4, #4]
 321 0010 63B9     		cbnz	r3, .L70
 322 0012 0B4B     		ldr	r3, .L77+4
 323 0014 1946     		mov	r1, r3
 324 0016 01E0     		b	.L71
 325              	.L73:
 326 0018 8C42     		cmp	r4, r1
 327 001a 0CD0     		beq	.L76
 328              	.L71:
 329 001c 0A46     		mov	r2, r1
 330 001e 0968     		ldr	r1, [r1]
 331 0020 9942     		cmp	r1, r3
 332 0022 F9D1     		bne	.L73
 333 0024 0021     		movs	r1, #0
 334              	.L72:
 335 0026 0748     		ldr	r0, .L77+8
 336 0028 FFF7FEFF 		bl	chPoolFree
 337              	.L70:
 338 002c BDE81040 		pop	{r4, lr}
 339 0030 0248     		ldr	r0, .L77
 340 0032 FFF7FEBF 		b	chMtxUnlock
 341              	.L76:
 342 0036 0B68     		ldr	r3, [r1]
ARM GAS  /tmp/ccCvLj1D.s 			page 7


 343 0038 1360     		str	r3, [r2]
 344 003a F4E7     		b	.L72
 345              	.L78:
 346              		.align	2
 347              	.L77:
 348 003c 00000000 		.word	.LANCHOR0
 349 0040 10000000 		.word	.LANCHOR0+16
 350 0044 14000000 		.word	.LANCHOR0+20
 351              		.size	chFactoryReleaseObject, .-chFactoryReleaseObject
 352              		.section	.text.chFactoryCreateBuffer,"ax",%progbits
 353              		.align	1
 354              		.p2align 4,,15
 355              		.global	chFactoryCreateBuffer
 356              		.syntax unified
 357              		.thumb
 358              		.thumb_func
 359              		.fpu fpv4-sp-d16
 360              		.type	chFactoryCreateBuffer, %function
 361              	chFactoryCreateBuffer:
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364 0000 38B5     		push	{r3, r4, r5, lr}
 365 0002 0446     		mov	r4, r0
 366 0004 0D46     		mov	r5, r1
 367 0006 0B48     		ldr	r0, .L85
 368 0008 FFF7FEFF 		bl	chMtxLock
 369 000c 2046     		mov	r0, r4
 370 000e 0A49     		ldr	r1, .L85+4
 371 0010 0823     		movs	r3, #8
 372 0012 05F11002 		add	r2, r5, #16
 373 0016 FFF7FEFF 		bl	dyn_create_object_heap
 374 001a 0446     		mov	r4, r0
 375 001c 20B1     		cbz	r0, .L80
 376 001e 2A46     		mov	r2, r5
 377 0020 0021     		movs	r1, #0
 378 0022 1030     		adds	r0, r0, #16
 379 0024 FFF7FEFF 		bl	memset
 380              	.L80:
 381 0028 0248     		ldr	r0, .L85
 382 002a FFF7FEFF 		bl	chMtxUnlock
 383 002e 2046     		mov	r0, r4
 384 0030 38BD     		pop	{r3, r4, r5, pc}
 385              	.L86:
 386 0032 00BF     		.align	2
 387              	.L85:
 388 0034 00000000 		.word	.LANCHOR0
 389 0038 24000000 		.word	.LANCHOR0+36
 390              		.size	chFactoryCreateBuffer, .-chFactoryCreateBuffer
 391              		.section	.text.chFactoryFindBuffer,"ax",%progbits
 392              		.align	1
 393              		.p2align 4,,15
 394              		.global	chFactoryFindBuffer
 395              		.syntax unified
 396              		.thumb
 397              		.thumb_func
 398              		.fpu fpv4-sp-d16
 399              		.type	chFactoryFindBuffer, %function
ARM GAS  /tmp/ccCvLj1D.s 			page 8


 400              	chFactoryFindBuffer:
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403 0000 124B     		ldr	r3, .L95
 404 0002 70B5     		push	{r4, r5, r6, lr}
 405 0004 1D46     		mov	r5, r3
 406 0006 0646     		mov	r6, r0
 407 0008 1846     		mov	r0, r3
 408 000a FFF7FEFF 		bl	chMtxLock
 409 000e 55F8244F 		ldr	r4, [r5, #36]!
 410 0012 AC42     		cmp	r4, r5
 411 0014 03D1     		bne	.L91
 412 0016 13E0     		b	.L92
 413              	.L89:
 414 0018 2468     		ldr	r4, [r4]
 415 001a AC42     		cmp	r4, r5
 416 001c 10D0     		beq	.L92
 417              	.L91:
 418 001e 04F10800 		add	r0, r4, #8
 419 0022 0822     		movs	r2, #8
 420 0024 3146     		mov	r1, r6
 421 0026 FFF7FEFF 		bl	strncmp
 422 002a 0028     		cmp	r0, #0
 423 002c F4D1     		bne	.L89
 424 002e 14B1     		cbz	r4, .L88
 425 0030 6368     		ldr	r3, [r4, #4]
 426 0032 0133     		adds	r3, r3, #1
 427 0034 6360     		str	r3, [r4, #4]
 428              	.L88:
 429 0036 0548     		ldr	r0, .L95
 430 0038 FFF7FEFF 		bl	chMtxUnlock
 431 003c 2046     		mov	r0, r4
 432 003e 70BD     		pop	{r4, r5, r6, pc}
 433              	.L92:
 434 0040 0248     		ldr	r0, .L95
 435 0042 0024     		movs	r4, #0
 436 0044 FFF7FEFF 		bl	chMtxUnlock
 437 0048 2046     		mov	r0, r4
 438 004a 70BD     		pop	{r4, r5, r6, pc}
 439              	.L96:
 440              		.align	2
 441              	.L95:
 442 004c 00000000 		.word	.LANCHOR0
 443              		.size	chFactoryFindBuffer, .-chFactoryFindBuffer
 444              		.section	.text.chFactoryReleaseBuffer,"ax",%progbits
 445              		.align	1
 446              		.p2align 4,,15
 447              		.global	chFactoryReleaseBuffer
 448              		.syntax unified
 449              		.thumb
 450              		.thumb_func
 451              		.fpu fpv4-sp-d16
 452              		.type	chFactoryReleaseBuffer, %function
 453              	chFactoryReleaseBuffer:
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccCvLj1D.s 			page 9


 457 0002 0446     		mov	r4, r0
 458 0004 0D48     		ldr	r0, .L106
 459 0006 FFF7FEFF 		bl	chMtxLock
 460 000a 6368     		ldr	r3, [r4, #4]
 461 000c 013B     		subs	r3, r3, #1
 462 000e 6360     		str	r3, [r4, #4]
 463 0010 5BB9     		cbnz	r3, .L99
 464 0012 0B4A     		ldr	r2, .L106+4
 465 0014 1046     		mov	r0, r2
 466 0016 01E0     		b	.L100
 467              	.L102:
 468 0018 8442     		cmp	r4, r0
 469 001a 0BD0     		beq	.L105
 470              	.L100:
 471 001c 0146     		mov	r1, r0
 472 001e 0068     		ldr	r0, [r0]
 473 0020 9042     		cmp	r0, r2
 474 0022 F9D1     		bne	.L102
 475 0024 0020     		movs	r0, #0
 476              	.L101:
 477 0026 FFF7FEFF 		bl	chHeapFree
 478              	.L99:
 479 002a BDE81040 		pop	{r4, lr}
 480 002e 0348     		ldr	r0, .L106
 481 0030 FFF7FEBF 		b	chMtxUnlock
 482              	.L105:
 483 0034 0268     		ldr	r2, [r0]
 484 0036 0A60     		str	r2, [r1]
 485 0038 F5E7     		b	.L101
 486              	.L107:
 487 003a 00BF     		.align	2
 488              	.L106:
 489 003c 00000000 		.word	.LANCHOR0
 490 0040 24000000 		.word	.LANCHOR0+36
 491              		.size	chFactoryReleaseBuffer, .-chFactoryReleaseBuffer
 492              		.section	.text.chFactoryCreateSemaphore,"ax",%progbits
 493              		.align	1
 494              		.p2align 4,,15
 495              		.global	chFactoryCreateSemaphore
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 499              		.fpu fpv4-sp-d16
 500              		.type	chFactoryCreateSemaphore, %function
 501              	chFactoryCreateSemaphore:
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 504 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 505 0004 1F4F     		ldr	r7, .L127
 506 0006 3E46     		mov	r6, r7
 507 0008 0546     		mov	r5, r0
 508 000a 3846     		mov	r0, r7
 509 000c 8846     		mov	r8, r1
 510 000e FFF7FEFF 		bl	chMtxLock
 511 0012 56F8284F 		ldr	r4, [r6, #40]!
 512 0016 B442     		cmp	r4, r6
 513 0018 03D1     		bne	.L111
ARM GAS  /tmp/ccCvLj1D.s 			page 10


 514 001a 12E0     		b	.L109
 515              	.L126:
 516 001c 2468     		ldr	r4, [r4]
 517 001e B442     		cmp	r4, r6
 518 0020 0FD0     		beq	.L109
 519              	.L111:
 520 0022 04F10800 		add	r0, r4, #8
 521 0026 0822     		movs	r2, #8
 522 0028 2946     		mov	r1, r5
 523 002a FFF7FEFF 		bl	strncmp
 524 002e 0028     		cmp	r0, #0
 525 0030 F4D1     		bne	.L126
 526 0032 34B1     		cbz	r4, .L109
 527              	.L112:
 528 0034 1348     		ldr	r0, .L127
 529 0036 0024     		movs	r4, #0
 530 0038 FFF7FEFF 		bl	chMtxUnlock
 531 003c 2046     		mov	r0, r4
 532 003e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 533              	.L109:
 534 0042 1148     		ldr	r0, .L127+4
 535 0044 FFF7FEFF 		bl	chPoolAlloc
 536 0048 0446     		mov	r4, r0
 537 004a 0028     		cmp	r0, #0
 538 004c F2D0     		beq	.L112
 539 004e 00F10802 		add	r2, r0, #8
 540 0052 05F10801 		add	r1, r5, #8
 541              	.L114:
 542 0056 15F8013B 		ldrb	r3, [r5], #1	@ zero_extendqisi2
 543 005a 02F8013B 		strb	r3, [r2], #1
 544 005e 0BB1     		cbz	r3, .L113
 545 0060 8D42     		cmp	r5, r1
 546 0062 F8D1     		bne	.L114
 547              	.L113:
 548 0064 BB6A     		ldr	r3, [r7, #40]
 549 0066 0122     		movs	r2, #1
 550 0068 C4E90032 		strd	r3, r2, [r4]
 551 006c 4146     		mov	r1, r8
 552 006e 04F11000 		add	r0, r4, #16
 553 0072 BC62     		str	r4, [r7, #40]
 554 0074 FFF7FEFF 		bl	chSemObjectInit
 555 0078 0248     		ldr	r0, .L127
 556 007a FFF7FEFF 		bl	chMtxUnlock
 557 007e 2046     		mov	r0, r4
 558 0080 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 559              	.L128:
 560              		.align	2
 561              	.L127:
 562 0084 00000000 		.word	.LANCHOR0
 563 0088 2C000000 		.word	.LANCHOR0+44
 564              		.size	chFactoryCreateSemaphore, .-chFactoryCreateSemaphore
 565              		.section	.text.chFactoryFindSemaphore,"ax",%progbits
 566              		.align	1
 567              		.p2align 4,,15
 568              		.global	chFactoryFindSemaphore
 569              		.syntax unified
 570              		.thumb
ARM GAS  /tmp/ccCvLj1D.s 			page 11


 571              		.thumb_func
 572              		.fpu fpv4-sp-d16
 573              		.type	chFactoryFindSemaphore, %function
 574              	chFactoryFindSemaphore:
 575              		@ args = 0, pretend = 0, frame = 0
 576              		@ frame_needed = 0, uses_anonymous_args = 0
 577 0000 124B     		ldr	r3, .L137
 578 0002 70B5     		push	{r4, r5, r6, lr}
 579 0004 1D46     		mov	r5, r3
 580 0006 0646     		mov	r6, r0
 581 0008 1846     		mov	r0, r3
 582 000a FFF7FEFF 		bl	chMtxLock
 583 000e 55F8284F 		ldr	r4, [r5, #40]!
 584 0012 AC42     		cmp	r4, r5
 585 0014 03D1     		bne	.L133
 586 0016 13E0     		b	.L134
 587              	.L131:
 588 0018 2468     		ldr	r4, [r4]
 589 001a AC42     		cmp	r4, r5
 590 001c 10D0     		beq	.L134
 591              	.L133:
 592 001e 04F10800 		add	r0, r4, #8
 593 0022 0822     		movs	r2, #8
 594 0024 3146     		mov	r1, r6
 595 0026 FFF7FEFF 		bl	strncmp
 596 002a 0028     		cmp	r0, #0
 597 002c F4D1     		bne	.L131
 598 002e 14B1     		cbz	r4, .L130
 599 0030 6368     		ldr	r3, [r4, #4]
 600 0032 0133     		adds	r3, r3, #1
 601 0034 6360     		str	r3, [r4, #4]
 602              	.L130:
 603 0036 0548     		ldr	r0, .L137
 604 0038 FFF7FEFF 		bl	chMtxUnlock
 605 003c 2046     		mov	r0, r4
 606 003e 70BD     		pop	{r4, r5, r6, pc}
 607              	.L134:
 608 0040 0248     		ldr	r0, .L137
 609 0042 0024     		movs	r4, #0
 610 0044 FFF7FEFF 		bl	chMtxUnlock
 611 0048 2046     		mov	r0, r4
 612 004a 70BD     		pop	{r4, r5, r6, pc}
 613              	.L138:
 614              		.align	2
 615              	.L137:
 616 004c 00000000 		.word	.LANCHOR0
 617              		.size	chFactoryFindSemaphore, .-chFactoryFindSemaphore
 618              		.section	.text.chFactoryReleaseSemaphore,"ax",%progbits
 619              		.align	1
 620              		.p2align 4,,15
 621              		.global	chFactoryReleaseSemaphore
 622              		.syntax unified
 623              		.thumb
 624              		.thumb_func
 625              		.fpu fpv4-sp-d16
 626              		.type	chFactoryReleaseSemaphore, %function
 627              	chFactoryReleaseSemaphore:
ARM GAS  /tmp/ccCvLj1D.s 			page 12


 628              		@ args = 0, pretend = 0, frame = 0
 629              		@ frame_needed = 0, uses_anonymous_args = 0
 630 0000 10B5     		push	{r4, lr}
 631 0002 0446     		mov	r4, r0
 632 0004 0D48     		ldr	r0, .L148
 633 0006 FFF7FEFF 		bl	chMtxLock
 634 000a 6368     		ldr	r3, [r4, #4]
 635 000c 013B     		subs	r3, r3, #1
 636 000e 6360     		str	r3, [r4, #4]
 637 0010 63B9     		cbnz	r3, .L141
 638 0012 0B4B     		ldr	r3, .L148+4
 639 0014 1946     		mov	r1, r3
 640 0016 01E0     		b	.L142
 641              	.L144:
 642 0018 8C42     		cmp	r4, r1
 643 001a 0CD0     		beq	.L147
 644              	.L142:
 645 001c 0A46     		mov	r2, r1
 646 001e 0968     		ldr	r1, [r1]
 647 0020 9942     		cmp	r1, r3
 648 0022 F9D1     		bne	.L144
 649 0024 0021     		movs	r1, #0
 650              	.L143:
 651 0026 0748     		ldr	r0, .L148+8
 652 0028 FFF7FEFF 		bl	chPoolFree
 653              	.L141:
 654 002c BDE81040 		pop	{r4, lr}
 655 0030 0248     		ldr	r0, .L148
 656 0032 FFF7FEBF 		b	chMtxUnlock
 657              	.L147:
 658 0036 0B68     		ldr	r3, [r1]
 659 0038 1360     		str	r3, [r2]
 660 003a F4E7     		b	.L143
 661              	.L149:
 662              		.align	2
 663              	.L148:
 664 003c 00000000 		.word	.LANCHOR0
 665 0040 28000000 		.word	.LANCHOR0+40
 666 0044 2C000000 		.word	.LANCHOR0+44
 667              		.size	chFactoryReleaseSemaphore, .-chFactoryReleaseSemaphore
 668              		.section	.text.chFactoryCreateMailbox,"ax",%progbits
 669              		.align	1
 670              		.p2align 4,,15
 671              		.global	chFactoryCreateMailbox
 672              		.syntax unified
 673              		.thumb
 674              		.thumb_func
 675              		.fpu fpv4-sp-d16
 676              		.type	chFactoryCreateMailbox, %function
 677              	chFactoryCreateMailbox:
 678              		@ args = 0, pretend = 0, frame = 0
 679              		@ frame_needed = 0, uses_anonymous_args = 0
 680 0000 38B5     		push	{r3, r4, r5, lr}
 681 0002 0446     		mov	r4, r0
 682 0004 0D46     		mov	r5, r1
 683 0006 0C48     		ldr	r0, .L156
 684 0008 FFF7FEFF 		bl	chMtxLock
ARM GAS  /tmp/ccCvLj1D.s 			page 13


 685 000c 05F10E02 		add	r2, r5, #14
 686 0010 2046     		mov	r0, r4
 687 0012 0A49     		ldr	r1, .L156+4
 688 0014 0823     		movs	r3, #8
 689 0016 9200     		lsls	r2, r2, #2
 690 0018 FFF7FEFF 		bl	dyn_create_object_heap
 691 001c 0446     		mov	r4, r0
 692 001e 28B1     		cbz	r0, .L151
 693 0020 00F13801 		add	r1, r0, #56
 694 0024 2A46     		mov	r2, r5
 695 0026 1030     		adds	r0, r0, #16
 696 0028 FFF7FEFF 		bl	chMBObjectInit
 697              	.L151:
 698 002c 0248     		ldr	r0, .L156
 699 002e FFF7FEFF 		bl	chMtxUnlock
 700 0032 2046     		mov	r0, r4
 701 0034 38BD     		pop	{r3, r4, r5, pc}
 702              	.L157:
 703 0036 00BF     		.align	2
 704              	.L156:
 705 0038 00000000 		.word	.LANCHOR0
 706 003c 3C000000 		.word	.LANCHOR0+60
 707              		.size	chFactoryCreateMailbox, .-chFactoryCreateMailbox
 708              		.section	.text.chFactoryFindMailbox,"ax",%progbits
 709              		.align	1
 710              		.p2align 4,,15
 711              		.global	chFactoryFindMailbox
 712              		.syntax unified
 713              		.thumb
 714              		.thumb_func
 715              		.fpu fpv4-sp-d16
 716              		.type	chFactoryFindMailbox, %function
 717              	chFactoryFindMailbox:
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 0, uses_anonymous_args = 0
 720 0000 124B     		ldr	r3, .L166
 721 0002 70B5     		push	{r4, r5, r6, lr}
 722 0004 1D46     		mov	r5, r3
 723 0006 0646     		mov	r6, r0
 724 0008 1846     		mov	r0, r3
 725 000a FFF7FEFF 		bl	chMtxLock
 726 000e 55F83C4F 		ldr	r4, [r5, #60]!
 727 0012 AC42     		cmp	r4, r5
 728 0014 03D1     		bne	.L162
 729 0016 13E0     		b	.L163
 730              	.L160:
 731 0018 2468     		ldr	r4, [r4]
 732 001a AC42     		cmp	r4, r5
 733 001c 10D0     		beq	.L163
 734              	.L162:
 735 001e 04F10800 		add	r0, r4, #8
 736 0022 0822     		movs	r2, #8
 737 0024 3146     		mov	r1, r6
 738 0026 FFF7FEFF 		bl	strncmp
 739 002a 0028     		cmp	r0, #0
 740 002c F4D1     		bne	.L160
 741 002e 14B1     		cbz	r4, .L159
ARM GAS  /tmp/ccCvLj1D.s 			page 14


 742 0030 6368     		ldr	r3, [r4, #4]
 743 0032 0133     		adds	r3, r3, #1
 744 0034 6360     		str	r3, [r4, #4]
 745              	.L159:
 746 0036 0548     		ldr	r0, .L166
 747 0038 FFF7FEFF 		bl	chMtxUnlock
 748 003c 2046     		mov	r0, r4
 749 003e 70BD     		pop	{r4, r5, r6, pc}
 750              	.L163:
 751 0040 0248     		ldr	r0, .L166
 752 0042 0024     		movs	r4, #0
 753 0044 FFF7FEFF 		bl	chMtxUnlock
 754 0048 2046     		mov	r0, r4
 755 004a 70BD     		pop	{r4, r5, r6, pc}
 756              	.L167:
 757              		.align	2
 758              	.L166:
 759 004c 00000000 		.word	.LANCHOR0
 760              		.size	chFactoryFindMailbox, .-chFactoryFindMailbox
 761              		.section	.text.chFactoryReleaseMailbox,"ax",%progbits
 762              		.align	1
 763              		.p2align 4,,15
 764              		.global	chFactoryReleaseMailbox
 765              		.syntax unified
 766              		.thumb
 767              		.thumb_func
 768              		.fpu fpv4-sp-d16
 769              		.type	chFactoryReleaseMailbox, %function
 770              	chFactoryReleaseMailbox:
 771              		@ args = 0, pretend = 0, frame = 0
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 773 0000 10B5     		push	{r4, lr}
 774 0002 0446     		mov	r4, r0
 775 0004 0D48     		ldr	r0, .L177
 776 0006 FFF7FEFF 		bl	chMtxLock
 777 000a 6368     		ldr	r3, [r4, #4]
 778 000c 013B     		subs	r3, r3, #1
 779 000e 6360     		str	r3, [r4, #4]
 780 0010 5BB9     		cbnz	r3, .L170
 781 0012 0B4A     		ldr	r2, .L177+4
 782 0014 1046     		mov	r0, r2
 783 0016 01E0     		b	.L171
 784              	.L173:
 785 0018 8442     		cmp	r4, r0
 786 001a 0BD0     		beq	.L176
 787              	.L171:
 788 001c 0146     		mov	r1, r0
 789 001e 0068     		ldr	r0, [r0]
 790 0020 9042     		cmp	r0, r2
 791 0022 F9D1     		bne	.L173
 792 0024 0020     		movs	r0, #0
 793              	.L172:
 794 0026 FFF7FEFF 		bl	chHeapFree
 795              	.L170:
 796 002a BDE81040 		pop	{r4, lr}
 797 002e 0348     		ldr	r0, .L177
 798 0030 FFF7FEBF 		b	chMtxUnlock
ARM GAS  /tmp/ccCvLj1D.s 			page 15


 799              	.L176:
 800 0034 0268     		ldr	r2, [r0]
 801 0036 0A60     		str	r2, [r1]
 802 0038 F5E7     		b	.L172
 803              	.L178:
 804 003a 00BF     		.align	2
 805              	.L177:
 806 003c 00000000 		.word	.LANCHOR0
 807 0040 3C000000 		.word	.LANCHOR0+60
 808              		.size	chFactoryReleaseMailbox, .-chFactoryReleaseMailbox
 809              		.section	.text.chFactoryCreateObjectsFIFO,"ax",%progbits
 810              		.align	1
 811              		.p2align 4,,15
 812              		.global	chFactoryCreateObjectsFIFO
 813              		.syntax unified
 814              		.thumb
 815              		.thumb_func
 816              		.fpu fpv4-sp-d16
 817              		.type	chFactoryCreateObjectsFIFO, %function
 818              	chFactoryCreateObjectsFIFO:
 819              		@ args = 0, pretend = 0, frame = 8
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 822 0004 1F46     		mov	r7, r3
 823 0006 1646     		mov	r6, r2
 824 0008 0C46     		mov	r4, r1
 825 000a 8046     		mov	r8, r0
 826 000c 82B0     		sub	sp, sp, #8
 827 000e 1748     		ldr	r0, .L185
 828 0010 013C     		subs	r4, r4, #1
 829 0012 07EB8605 		add	r5, r7, r6, lsl #2
 830 0016 FFF7FEFF 		bl	chMtxLock
 831 001a 3C44     		add	r4, r4, r7
 832 001c 7B42     		rsbs	r3, r7, #0
 833 001e 5335     		adds	r5, r5, #83
 834 0020 1C40     		ands	r4, r4, r3
 835 0022 1D40     		ands	r5, r5, r3
 836 0024 4046     		mov	r0, r8
 837 0026 1249     		ldr	r1, .L185+4
 838 0028 3B46     		mov	r3, r7
 839 002a 06FB0452 		mla	r2, r6, r4, r5
 840 002e FFF7FEFF 		bl	dyn_create_object_heap
 841 0032 8046     		mov	r8, r0
 842 0034 90B1     		cbz	r0, .L180
 843 0036 0544     		add	r5, r5, r0
 844 0038 3A46     		mov	r2, r7
 845 003a 1030     		adds	r0, r0, #16
 846 003c 2146     		mov	r1, r4
 847 003e 0190     		str	r0, [sp, #4]
 848 0040 FFF7FEFF 		bl	chGuardedPoolObjectInitAligned
 849 0044 0198     		ldr	r0, [sp, #4]
 850 0046 3246     		mov	r2, r6
 851 0048 2946     		mov	r1, r5
 852 004a FFF7FEFF 		bl	chGuardedPoolLoadArray
 853 004e 3246     		mov	r2, r6
 854 0050 08F15401 		add	r1, r8, #84
 855 0054 08F12C00 		add	r0, r8, #44
ARM GAS  /tmp/ccCvLj1D.s 			page 16


 856 0058 FFF7FEFF 		bl	chMBObjectInit
 857              	.L180:
 858 005c 0348     		ldr	r0, .L185
 859 005e FFF7FEFF 		bl	chMtxUnlock
 860 0062 4046     		mov	r0, r8
 861 0064 02B0     		add	sp, sp, #8
 862              		@ sp needed
 863 0066 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 864              	.L186:
 865 006a 00BF     		.align	2
 866              	.L185:
 867 006c 00000000 		.word	.LANCHOR0
 868 0070 40000000 		.word	.LANCHOR0+64
 869              		.size	chFactoryCreateObjectsFIFO, .-chFactoryCreateObjectsFIFO
 870              		.section	.text.chFactoryFindObjectsFIFO,"ax",%progbits
 871              		.align	1
 872              		.p2align 4,,15
 873              		.global	chFactoryFindObjectsFIFO
 874              		.syntax unified
 875              		.thumb
 876              		.thumb_func
 877              		.fpu fpv4-sp-d16
 878              		.type	chFactoryFindObjectsFIFO, %function
 879              	chFactoryFindObjectsFIFO:
 880              		@ args = 0, pretend = 0, frame = 0
 881              		@ frame_needed = 0, uses_anonymous_args = 0
 882 0000 124B     		ldr	r3, .L195
 883 0002 70B5     		push	{r4, r5, r6, lr}
 884 0004 1D46     		mov	r5, r3
 885 0006 0646     		mov	r6, r0
 886 0008 1846     		mov	r0, r3
 887 000a FFF7FEFF 		bl	chMtxLock
 888 000e 55F8404F 		ldr	r4, [r5, #64]!
 889 0012 AC42     		cmp	r4, r5
 890 0014 03D1     		bne	.L191
 891 0016 13E0     		b	.L192
 892              	.L189:
 893 0018 2468     		ldr	r4, [r4]
 894 001a AC42     		cmp	r4, r5
 895 001c 10D0     		beq	.L192
 896              	.L191:
 897 001e 04F10800 		add	r0, r4, #8
 898 0022 0822     		movs	r2, #8
 899 0024 3146     		mov	r1, r6
 900 0026 FFF7FEFF 		bl	strncmp
 901 002a 0028     		cmp	r0, #0
 902 002c F4D1     		bne	.L189
 903 002e 14B1     		cbz	r4, .L188
 904 0030 6368     		ldr	r3, [r4, #4]
 905 0032 0133     		adds	r3, r3, #1
 906 0034 6360     		str	r3, [r4, #4]
 907              	.L188:
 908 0036 0548     		ldr	r0, .L195
 909 0038 FFF7FEFF 		bl	chMtxUnlock
 910 003c 2046     		mov	r0, r4
 911 003e 70BD     		pop	{r4, r5, r6, pc}
 912              	.L192:
ARM GAS  /tmp/ccCvLj1D.s 			page 17


 913 0040 0248     		ldr	r0, .L195
 914 0042 0024     		movs	r4, #0
 915 0044 FFF7FEFF 		bl	chMtxUnlock
 916 0048 2046     		mov	r0, r4
 917 004a 70BD     		pop	{r4, r5, r6, pc}
 918              	.L196:
 919              		.align	2
 920              	.L195:
 921 004c 00000000 		.word	.LANCHOR0
 922              		.size	chFactoryFindObjectsFIFO, .-chFactoryFindObjectsFIFO
 923              		.section	.text.chFactoryReleaseObjectsFIFO,"ax",%progbits
 924              		.align	1
 925              		.p2align 4,,15
 926              		.global	chFactoryReleaseObjectsFIFO
 927              		.syntax unified
 928              		.thumb
 929              		.thumb_func
 930              		.fpu fpv4-sp-d16
 931              		.type	chFactoryReleaseObjectsFIFO, %function
 932              	chFactoryReleaseObjectsFIFO:
 933              		@ args = 0, pretend = 0, frame = 0
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 935 0000 10B5     		push	{r4, lr}
 936 0002 0446     		mov	r4, r0
 937 0004 0D48     		ldr	r0, .L206
 938 0006 FFF7FEFF 		bl	chMtxLock
 939 000a 6368     		ldr	r3, [r4, #4]
 940 000c 013B     		subs	r3, r3, #1
 941 000e 6360     		str	r3, [r4, #4]
 942 0010 5BB9     		cbnz	r3, .L199
 943 0012 0B4A     		ldr	r2, .L206+4
 944 0014 1046     		mov	r0, r2
 945 0016 01E0     		b	.L200
 946              	.L202:
 947 0018 8442     		cmp	r4, r0
 948 001a 0BD0     		beq	.L205
 949              	.L200:
 950 001c 0146     		mov	r1, r0
 951 001e 0068     		ldr	r0, [r0]
 952 0020 9042     		cmp	r0, r2
 953 0022 F9D1     		bne	.L202
 954 0024 0020     		movs	r0, #0
 955              	.L201:
 956 0026 FFF7FEFF 		bl	chHeapFree
 957              	.L199:
 958 002a BDE81040 		pop	{r4, lr}
 959 002e 0348     		ldr	r0, .L206
 960 0030 FFF7FEBF 		b	chMtxUnlock
 961              	.L205:
 962 0034 0268     		ldr	r2, [r0]
 963 0036 0A60     		str	r2, [r1]
 964 0038 F5E7     		b	.L201
 965              	.L207:
 966 003a 00BF     		.align	2
 967              	.L206:
 968 003c 00000000 		.word	.LANCHOR0
 969 0040 40000000 		.word	.LANCHOR0+64
ARM GAS  /tmp/ccCvLj1D.s 			page 18


 970              		.size	chFactoryReleaseObjectsFIFO, .-chFactoryReleaseObjectsFIFO
 971              		.section	.text.chFactoryCreatePipe,"ax",%progbits
 972              		.align	1
 973              		.p2align 4,,15
 974              		.global	chFactoryCreatePipe
 975              		.syntax unified
 976              		.thumb
 977              		.thumb_func
 978              		.fpu fpv4-sp-d16
 979              		.type	chFactoryCreatePipe, %function
 980              	chFactoryCreatePipe:
 981              		@ args = 0, pretend = 0, frame = 0
 982              		@ frame_needed = 0, uses_anonymous_args = 0
 983 0000 38B5     		push	{r3, r4, r5, lr}
 984 0002 0446     		mov	r4, r0
 985 0004 0D46     		mov	r5, r1
 986 0006 0B48     		ldr	r0, .L214
 987 0008 FFF7FEFF 		bl	chMtxLock
 988 000c 2046     		mov	r0, r4
 989 000e 0A49     		ldr	r1, .L214+4
 990 0010 0823     		movs	r3, #8
 991 0012 05F16002 		add	r2, r5, #96
 992 0016 FFF7FEFF 		bl	dyn_create_object_heap
 993 001a 0446     		mov	r4, r0
 994 001c 28B1     		cbz	r0, .L209
 995 001e 00F16001 		add	r1, r0, #96
 996 0022 2A46     		mov	r2, r5
 997 0024 1030     		adds	r0, r0, #16
 998 0026 FFF7FEFF 		bl	chPipeObjectInit
 999              	.L209:
 1000 002a 0248     		ldr	r0, .L214
 1001 002c FFF7FEFF 		bl	chMtxUnlock
 1002 0030 2046     		mov	r0, r4
 1003 0032 38BD     		pop	{r3, r4, r5, pc}
 1004              	.L215:
 1005              		.align	2
 1006              	.L214:
 1007 0034 00000000 		.word	.LANCHOR0
 1008 0038 44000000 		.word	.LANCHOR0+68
 1009              		.size	chFactoryCreatePipe, .-chFactoryCreatePipe
 1010              		.section	.text.chFactoryFindPipe,"ax",%progbits
 1011              		.align	1
 1012              		.p2align 4,,15
 1013              		.global	chFactoryFindPipe
 1014              		.syntax unified
 1015              		.thumb
 1016              		.thumb_func
 1017              		.fpu fpv4-sp-d16
 1018              		.type	chFactoryFindPipe, %function
 1019              	chFactoryFindPipe:
 1020              		@ args = 0, pretend = 0, frame = 0
 1021              		@ frame_needed = 0, uses_anonymous_args = 0
 1022 0000 124B     		ldr	r3, .L224
 1023 0002 70B5     		push	{r4, r5, r6, lr}
 1024 0004 1D46     		mov	r5, r3
 1025 0006 0646     		mov	r6, r0
 1026 0008 1846     		mov	r0, r3
ARM GAS  /tmp/ccCvLj1D.s 			page 19


 1027 000a FFF7FEFF 		bl	chMtxLock
 1028 000e 55F8444F 		ldr	r4, [r5, #68]!
 1029 0012 AC42     		cmp	r4, r5
 1030 0014 03D1     		bne	.L220
 1031 0016 13E0     		b	.L221
 1032              	.L218:
 1033 0018 2468     		ldr	r4, [r4]
 1034 001a AC42     		cmp	r4, r5
 1035 001c 10D0     		beq	.L221
 1036              	.L220:
 1037 001e 04F10800 		add	r0, r4, #8
 1038 0022 0822     		movs	r2, #8
 1039 0024 3146     		mov	r1, r6
 1040 0026 FFF7FEFF 		bl	strncmp
 1041 002a 0028     		cmp	r0, #0
 1042 002c F4D1     		bne	.L218
 1043 002e 14B1     		cbz	r4, .L217
 1044 0030 6368     		ldr	r3, [r4, #4]
 1045 0032 0133     		adds	r3, r3, #1
 1046 0034 6360     		str	r3, [r4, #4]
 1047              	.L217:
 1048 0036 0548     		ldr	r0, .L224
 1049 0038 FFF7FEFF 		bl	chMtxUnlock
 1050 003c 2046     		mov	r0, r4
 1051 003e 70BD     		pop	{r4, r5, r6, pc}
 1052              	.L221:
 1053 0040 0248     		ldr	r0, .L224
 1054 0042 0024     		movs	r4, #0
 1055 0044 FFF7FEFF 		bl	chMtxUnlock
 1056 0048 2046     		mov	r0, r4
 1057 004a 70BD     		pop	{r4, r5, r6, pc}
 1058              	.L225:
 1059              		.align	2
 1060              	.L224:
 1061 004c 00000000 		.word	.LANCHOR0
 1062              		.size	chFactoryFindPipe, .-chFactoryFindPipe
 1063              		.section	.text.chFactoryReleasePipe,"ax",%progbits
 1064              		.align	1
 1065              		.p2align 4,,15
 1066              		.global	chFactoryReleasePipe
 1067              		.syntax unified
 1068              		.thumb
 1069              		.thumb_func
 1070              		.fpu fpv4-sp-d16
 1071              		.type	chFactoryReleasePipe, %function
 1072              	chFactoryReleasePipe:
 1073              		@ args = 0, pretend = 0, frame = 0
 1074              		@ frame_needed = 0, uses_anonymous_args = 0
 1075 0000 10B5     		push	{r4, lr}
 1076 0002 0446     		mov	r4, r0
 1077 0004 0D48     		ldr	r0, .L235
 1078 0006 FFF7FEFF 		bl	chMtxLock
 1079 000a 6368     		ldr	r3, [r4, #4]
 1080 000c 013B     		subs	r3, r3, #1
 1081 000e 6360     		str	r3, [r4, #4]
 1082 0010 5BB9     		cbnz	r3, .L228
 1083 0012 0B4A     		ldr	r2, .L235+4
ARM GAS  /tmp/ccCvLj1D.s 			page 20


 1084 0014 1046     		mov	r0, r2
 1085 0016 01E0     		b	.L229
 1086              	.L231:
 1087 0018 8442     		cmp	r4, r0
 1088 001a 0BD0     		beq	.L234
 1089              	.L229:
 1090 001c 0146     		mov	r1, r0
 1091 001e 0068     		ldr	r0, [r0]
 1092 0020 9042     		cmp	r0, r2
 1093 0022 F9D1     		bne	.L231
 1094 0024 0020     		movs	r0, #0
 1095              	.L230:
 1096 0026 FFF7FEFF 		bl	chHeapFree
 1097              	.L228:
 1098 002a BDE81040 		pop	{r4, lr}
 1099 002e 0348     		ldr	r0, .L235
 1100 0030 FFF7FEBF 		b	chMtxUnlock
 1101              	.L234:
 1102 0034 0268     		ldr	r2, [r0]
 1103 0036 0A60     		str	r2, [r1]
 1104 0038 F5E7     		b	.L230
 1105              	.L236:
 1106 003a 00BF     		.align	2
 1107              	.L235:
 1108 003c 00000000 		.word	.LANCHOR0
 1109 0040 44000000 		.word	.LANCHOR0+68
 1110              		.size	chFactoryReleasePipe, .-chFactoryReleasePipe
 1111              		.global	ch_factory
 1112              		.section	.bss.ch_factory,"aw",%nobits
 1113              		.align	2
 1114              		.set	.LANCHOR0,. + 0
 1115              		.type	ch_factory, %object
 1116              		.size	ch_factory, 72
 1117              	ch_factory:
 1118 0000 00000000 		.space	72
 1118      00000000 
 1118      00000000 
 1118      00000000 
 1118      00000000 
 1119              		.ident	"GCC: (15:10.3-2021.07-4) 10.3.1 20210621 (release)"
ARM GAS  /tmp/ccCvLj1D.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 chfactory.c
     /tmp/ccCvLj1D.s:15     .text.chCoreAllocAlignedI:0000000000000000 $t
     /tmp/ccCvLj1D.s:23     .text.chCoreAllocAlignedI:0000000000000000 chCoreAllocAlignedI
     /tmp/ccCvLj1D.s:31     .text.dyn_create_object_heap:0000000000000000 $t
     /tmp/ccCvLj1D.s:38     .text.dyn_create_object_heap:0000000000000000 dyn_create_object_heap
     /tmp/ccCvLj1D.s:88     .text.__factory_init:0000000000000000 $t
     /tmp/ccCvLj1D.s:96     .text.__factory_init:0000000000000000 __factory_init
     /tmp/ccCvLj1D.s:127    .text.__factory_init:000000000000004c $d
     /tmp/ccCvLj1D.s:131    .text.chFactoryRegisterObject:0000000000000000 $t
     /tmp/ccCvLj1D.s:139    .text.chFactoryRegisterObject:0000000000000000 chFactoryRegisterObject
     /tmp/ccCvLj1D.s:198    .text.chFactoryRegisterObject:0000000000000080 $d
     /tmp/ccCvLj1D.s:202    .text.chFactoryFindObject:0000000000000000 $t
     /tmp/ccCvLj1D.s:210    .text.chFactoryFindObject:0000000000000000 chFactoryFindObject
     /tmp/ccCvLj1D.s:252    .text.chFactoryFindObject:000000000000004c $d
     /tmp/ccCvLj1D.s:255    .text.chFactoryFindObjectByPointer:0000000000000000 $t
     /tmp/ccCvLj1D.s:263    .text.chFactoryFindObjectByPointer:0000000000000000 chFactoryFindObjectByPointer
     /tmp/ccCvLj1D.s:300    .text.chFactoryFindObjectByPointer:0000000000000040 $d
     /tmp/ccCvLj1D.s:303    .text.chFactoryReleaseObject:0000000000000000 $t
     /tmp/ccCvLj1D.s:311    .text.chFactoryReleaseObject:0000000000000000 chFactoryReleaseObject
     /tmp/ccCvLj1D.s:348    .text.chFactoryReleaseObject:000000000000003c $d
     /tmp/ccCvLj1D.s:353    .text.chFactoryCreateBuffer:0000000000000000 $t
     /tmp/ccCvLj1D.s:361    .text.chFactoryCreateBuffer:0000000000000000 chFactoryCreateBuffer
     /tmp/ccCvLj1D.s:388    .text.chFactoryCreateBuffer:0000000000000034 $d
     /tmp/ccCvLj1D.s:392    .text.chFactoryFindBuffer:0000000000000000 $t
     /tmp/ccCvLj1D.s:400    .text.chFactoryFindBuffer:0000000000000000 chFactoryFindBuffer
     /tmp/ccCvLj1D.s:442    .text.chFactoryFindBuffer:000000000000004c $d
     /tmp/ccCvLj1D.s:445    .text.chFactoryReleaseBuffer:0000000000000000 $t
     /tmp/ccCvLj1D.s:453    .text.chFactoryReleaseBuffer:0000000000000000 chFactoryReleaseBuffer
     /tmp/ccCvLj1D.s:489    .text.chFactoryReleaseBuffer:000000000000003c $d
     /tmp/ccCvLj1D.s:493    .text.chFactoryCreateSemaphore:0000000000000000 $t
     /tmp/ccCvLj1D.s:501    .text.chFactoryCreateSemaphore:0000000000000000 chFactoryCreateSemaphore
     /tmp/ccCvLj1D.s:562    .text.chFactoryCreateSemaphore:0000000000000084 $d
     /tmp/ccCvLj1D.s:566    .text.chFactoryFindSemaphore:0000000000000000 $t
     /tmp/ccCvLj1D.s:574    .text.chFactoryFindSemaphore:0000000000000000 chFactoryFindSemaphore
     /tmp/ccCvLj1D.s:616    .text.chFactoryFindSemaphore:000000000000004c $d
     /tmp/ccCvLj1D.s:619    .text.chFactoryReleaseSemaphore:0000000000000000 $t
     /tmp/ccCvLj1D.s:627    .text.chFactoryReleaseSemaphore:0000000000000000 chFactoryReleaseSemaphore
     /tmp/ccCvLj1D.s:664    .text.chFactoryReleaseSemaphore:000000000000003c $d
     /tmp/ccCvLj1D.s:669    .text.chFactoryCreateMailbox:0000000000000000 $t
     /tmp/ccCvLj1D.s:677    .text.chFactoryCreateMailbox:0000000000000000 chFactoryCreateMailbox
     /tmp/ccCvLj1D.s:705    .text.chFactoryCreateMailbox:0000000000000038 $d
     /tmp/ccCvLj1D.s:709    .text.chFactoryFindMailbox:0000000000000000 $t
     /tmp/ccCvLj1D.s:717    .text.chFactoryFindMailbox:0000000000000000 chFactoryFindMailbox
     /tmp/ccCvLj1D.s:759    .text.chFactoryFindMailbox:000000000000004c $d
     /tmp/ccCvLj1D.s:762    .text.chFactoryReleaseMailbox:0000000000000000 $t
     /tmp/ccCvLj1D.s:770    .text.chFactoryReleaseMailbox:0000000000000000 chFactoryReleaseMailbox
     /tmp/ccCvLj1D.s:806    .text.chFactoryReleaseMailbox:000000000000003c $d
     /tmp/ccCvLj1D.s:810    .text.chFactoryCreateObjectsFIFO:0000000000000000 $t
     /tmp/ccCvLj1D.s:818    .text.chFactoryCreateObjectsFIFO:0000000000000000 chFactoryCreateObjectsFIFO
     /tmp/ccCvLj1D.s:867    .text.chFactoryCreateObjectsFIFO:000000000000006c $d
     /tmp/ccCvLj1D.s:871    .text.chFactoryFindObjectsFIFO:0000000000000000 $t
     /tmp/ccCvLj1D.s:879    .text.chFactoryFindObjectsFIFO:0000000000000000 chFactoryFindObjectsFIFO
     /tmp/ccCvLj1D.s:921    .text.chFactoryFindObjectsFIFO:000000000000004c $d
     /tmp/ccCvLj1D.s:924    .text.chFactoryReleaseObjectsFIFO:0000000000000000 $t
     /tmp/ccCvLj1D.s:932    .text.chFactoryReleaseObjectsFIFO:0000000000000000 chFactoryReleaseObjectsFIFO
     /tmp/ccCvLj1D.s:968    .text.chFactoryReleaseObjectsFIFO:000000000000003c $d
ARM GAS  /tmp/ccCvLj1D.s 			page 22


     /tmp/ccCvLj1D.s:972    .text.chFactoryCreatePipe:0000000000000000 $t
     /tmp/ccCvLj1D.s:980    .text.chFactoryCreatePipe:0000000000000000 chFactoryCreatePipe
     /tmp/ccCvLj1D.s:1007   .text.chFactoryCreatePipe:0000000000000034 $d
     /tmp/ccCvLj1D.s:1011   .text.chFactoryFindPipe:0000000000000000 $t
     /tmp/ccCvLj1D.s:1019   .text.chFactoryFindPipe:0000000000000000 chFactoryFindPipe
     /tmp/ccCvLj1D.s:1061   .text.chFactoryFindPipe:000000000000004c $d
     /tmp/ccCvLj1D.s:1064   .text.chFactoryReleasePipe:0000000000000000 $t
     /tmp/ccCvLj1D.s:1072   .text.chFactoryReleasePipe:0000000000000000 chFactoryReleasePipe
     /tmp/ccCvLj1D.s:1108   .text.chFactoryReleasePipe:000000000000003c $d
     /tmp/ccCvLj1D.s:1117   .bss.ch_factory:0000000000000000 ch_factory
     /tmp/ccCvLj1D.s:1113   .bss.ch_factory:0000000000000000 $d

UNDEFINED SYMBOLS
chCoreAllocFromTopI
strncmp
chHeapAllocAligned
chMtxObjectInit
chPoolObjectInitAligned
chMtxLock
chMtxUnlock
chPoolAlloc
chPoolFree
memset
chHeapFree
chSemObjectInit
chMBObjectInit
chGuardedPoolObjectInitAligned
chGuardedPoolLoadArray
chPipeObjectInit
