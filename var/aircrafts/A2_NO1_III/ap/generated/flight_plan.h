/* This file has been generated by gen_flight_plan from /home/argroos/paparazzi/conf/flight_plans/FlyHigh/Zugspitze_Sounding_150m.xml */
/* Version v6.4.0_stable */
/* Please DO NOT EDIT */

#ifndef FLIGHT_PLAN_H
#define FLIGHT_PLAN_H

#include "std.h"
#include "generated/modules.h"
#include "modules/core/abi.h"
#include "autopilot.h"




#define FLIGHT_PLAN_NAME "Zugspitze_Sounding_150m"
#define NAV_DEFAULT_ALT 2595 /* nominal altitude of the flight plan */
#define NAV_UTM_EAST0 649123
#define NAV_UTM_NORTH0 5253077
#define NAV_UTM_ZONE0 32
#define NAV_LAT0 474140980 /* 1e7deg */
#define NAV_LON0 109768410 /* 1e7deg */
#define NAV_ALT0 2575000 /* mm above msl */
#define NAV_MSL0 48670 /* mm, EGM96 geoid-height (msl) over ellipsoid */
#define QFU 0.0
#define WP_dummy 0
#define WP_HOME 1
#define WP_Profile 2
#define WAYPOINTS_UTM { \
 {0.0, 0.0, 2595},\
 {0.0, 0.0, 2595},\
 {-76.9, 46.9, 2595},\
};
#define WAYPOINTS_ENU { \
 {-0.00, -0.00, 20.00}, /* ENU in meters  */ \
 {-0.00, -0.00, 20.00}, /* ENU in meters  */ \
 {-75.73, 48.82, 20.00}, /* ENU in meters  */ \
};
#define WAYPOINTS_LLA { \
 {.lat=474140979, .lon=109768409, .alt=2595000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=48.67m) */ \
 {.lat=474140979, .lon=109768409, .alt=2595000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=48.67m) */ \
 {.lat=474145369, .lon=109758379, .alt=2595000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=48.67m) */ \
};
#define WAYPOINTS_LLA_WGS84 { \
 {.lat=474140979, .lon=109768409, .alt=2643670}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) */ \
 {.lat=474140979, .lon=109768409, .alt=2643670}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) */ \
 {.lat=474145369, .lon=109758379, .alt=2643670}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) */ \
};
#define WAYPOINTS_GLOBAL { \
 FALSE, \
 TRUE, \
 TRUE, \
};
#define NB_WAYPOINT 3
#define FP_BLOCKS { \
 "Wait GPS" , \
 "Geo init" , \
 "Waiting for Remote Control" , \
 "Holding point" , \
 "Takeoff" , \
 "Climb" , \
 "Circle" , \
 "Descent" , \
 "Down" , \
 "Standby" , \
 "HOME" , \
}
#define NB_BLOCK 11
#define GROUND_ALT 2575.
#define GROUND_ALT_CM 257500
#define SECURITY_HEIGHT 20.
#define SECURITY_ALT 2595.
#define HOME_MODE_HEIGHT 20.
#define MAX_DIST_FROM_HOME 250.


#ifndef FBW


#endif

#ifdef NAV_C


static inline void auto_nav_init(void) {
}

static inline void auto_nav(void) {
  if ((nav_block != 9) && (10.500000>PowerVoltage())) { GotoBlock(9); return; }
  switch (nav_block) {
    Block(0) // Wait GPS
    switch(nav_stage) {
      Stage(0)
        autopilot.kill_throttle = 1;
        NextStage();
      Label(while_1)
      Stage(1)
        if (! (!(GpsFixValid()))) Goto(endwhile_2) else NextStageAndBreak();
        Stage(2)
          Goto(while_1)
        Label(endwhile_2)
      /* Falls through. */
      default:
      Stage(3)
        NextBlock();
        break;
    }
    break;

    Block(1) // Geo init
    switch(nav_stage) {
      Label(while_3)
      Stage(0)
        if (! (LessThan(NavBlockTime(),10))) Goto(endwhile_4) else NextStageAndBreak();
        Stage(1)
          Goto(while_3)
        Label(endwhile_4)
      /* Falls through. */
      default:
      Stage(2)
        NextBlock();
        break;
    }
    break;

    Block(2) // Waiting for Remote Control
    switch(nav_stage) {
      Label(while_5)
      Stage(0)
        if (! (RCLost())) Goto(endwhile_6) else NextStageAndBreak();
        Stage(1)
          Goto(while_5)
        Label(endwhile_6)
      /* Falls through. */
      default:
      Stage(2)
        NextBlock();
        break;
    }
    break;

    Block(3) // Holding point
    switch(nav_stage) {
      Stage(0)
        autopilot.kill_throttle = 1;
        NextStage();
      Stage(1)
        NavAttitude(RadOfDeg(0));
        NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
        NavVerticalThrottleMode(9600*(0));
        break;
      /* Falls through. */
      default:
      Stage(2)
        NextBlock();
        break;
    }
    break;

    Block(4) // Takeoff
    switch(nav_stage) {
      Stage(0)
        autopilot.kill_throttle = 0;
        NextStage();
      Stage(1)
        autopilot.flight_time = 0;
        NextStage();
      Stage(2)
        autopilot.kill_throttle = 0;
        NextStage();
      /* Falls through. */
      default:
      Stage(3)
        NextBlock();
        break;
    }
    break;

    Block(5) // Climb
    switch(nav_stage) {
      Stage(0)
        NavVerticalAutoThrottleMode(RadOfDeg(25));
        NavVerticalThrottleMode(9600*(0.850000));
        NavCircleWaypoint(2, -(60));
        if ((GetPosAlt()>(ground_alt+150))) {
          NextStageAndBreak()
        }
        break;
      Stage(1)
        GotoBlock(6);
        break;
      /* Falls through. */
      default:
      Stage(2)
        NextBlock();
        break;
    }
    break;

    Block(6) // Circle
    if ((nav_block != 8) && (GetPosAlt()>(GetAltRef()+180))) { GotoBlock(8); return; }
    switch(nav_stage) {
      Stage(0)
        NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
        NavVerticalAltitudeMode((GetAltRef()+150), 0.);
        NavCircleWaypoint(2, -(60));
        if ((stage_time>60)) {
          NextStageAndBreak()
        }
        break;
      Stage(1)
        GotoBlock(7);
        break;
      /* Falls through. */
      default:
      Stage(2)
        NextBlock();
        break;
    }
    break;

    Block(7) // Descent
    if ((nav_block != 8) && (GetPosAlt()>(GetAltRef()+180))) { GotoBlock(8); return; }
    switch(nav_stage) {
      Stage(0)
        NavVerticalAutoThrottleMode(RadOfDeg(2));
        NavVerticalThrottleMode(9600*(0.550000));
        NavCircleWaypoint(2, -(60));
        if (((GetAltRef()+15)>GetPosAlt())) {
          NextStageAndBreak()
        }
        break;
      Stage(1)
        GotoBlock(9);
        break;
      /* Falls through. */
      default:
      Stage(2)
        NextBlock();
        break;
    }
    break;

    Block(8) // Down
    switch(nav_stage) {
      Stage(0)
        NavVerticalAutoThrottleMode(RadOfDeg(-(15)));
        NavVerticalThrottleMode(9600*(0.600000));
        NavCircleWaypoint(2, -(60));
        if (((ground_alt+50)>GetPosAlt())) {
          NextStageAndBreak()
        }
        break;
      Stage(1)
        GotoBlock(9);
        break;
      /* Falls through. */
      default:
      Stage(2)
        NextBlock();
        break;
    }
    break;

    Block(9) // Standby
    switch(nav_stage) {
      Stage(0)
        NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
        NavVerticalAltitudeMode(WaypointAlt(1), 0.);
        NavCircleWaypoint(1, -(60));
        break;
      /* Falls through. */
      default:
      Stage(1)
        NextBlock();
        break;
    }
    break;

    Block(10) // HOME
    switch(nav_stage) {
      Stage(0)
        nav_home();
        break;
      /* Falls through. */
      default:
      Stage(1)
        NextBlock();
        break;
    }
    break;

    default: break;
  }
}
#endif // NAV_C

#endif // FLIGHT_PLAN_H
